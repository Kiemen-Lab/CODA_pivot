<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>MainWindow</class>
 <widget class="QMainWindow" name="MainWindow">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>867</width>
    <height>718</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>MainWindow</string>
  </property>
  <property name="windowIcon">
   <iconset>
    <normaloff>logo square large.jpg</normaloff>logo square large.jpg</iconset>
  </property>
  <property name="styleSheet">
   <string notr="true">QWidget { 
	background-color: #323232;
}

QMainWindow{
	background-color: #323232;
}

QMenuBar::item {
    background-color: transparent; /* Transparent background for each menu item */
    color: #ffffff; /* White font color for menu items */
}</string>
  </property>
  <widget class="QWidget" name="centralWidget">
   <widget class="QTabWidget" name="tabWidget">
    <property name="geometry">
     <rect>
      <x>10</x>
      <y>10</y>
      <width>851</width>
      <height>691</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <pointsize>10</pointsize>
      <weight>75</weight>
      <bold>true</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QWidget { 
    background-color: #323232;
}

QTabWidget::pane {
    background-color: #414141;
    color: #e6e6e6;
    border: 1px solid #2e2e2e; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
}


QTabBar::tab {
    background-color: #5a5a5a;
    border: 1px solid #2e2e2e; /* Border  */
    color: #e6e6e6;
	height: 23px;
	width: 120px;
}
</string>
    </property>
    <property name="currentIndex">
     <number>0</number>
    </property>
    <property name="usesScrollButtons">
     <bool>false</bool>
    </property>
    <widget class="QWidget" name="ImportProjectTabName">
     <attribute name="title">
      <string>Set Up Job</string>
     </attribute>
     <widget class="QFrame" name="DefineFixedImageFrame">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>10</y>
        <width>815</width>
        <height>120</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QFrame { 
	background-color: #4b4b4b;
	border: 1px solid #e6e6e6; /* Border  */
}</string>
      </property>
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
      <widget class="QTextEdit" name="FixedImageTableHeaderText">
       <property name="geometry">
        <rect>
         <x>0</x>
         <y>0</y>
         <width>815</width>
         <height>25</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QTextEdit { 
	background-color: #4b4b4b;
	color: #e6e6e6; /* Text color */
	border: 1px solid #e6e6e6; /* Border  */
    text-align: left;
    font-weight: bold;
}</string>
       </property>
       <property name="verticalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="horizontalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="readOnly">
        <bool>true</bool>
       </property>
       <property name="html">
        <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'MS Shell Dlg 2'; font-size:9pt; font-weight:600; font-style:normal;&quot;&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:10pt;&quot;&gt;Define Fixed Image&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
      </widget>
      <widget class="QPushButton" name="chooseFixedImageButton">
       <property name="geometry">
        <rect>
         <x>694</x>
         <y>35</y>
         <width>41</width>
         <height>31</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #323232;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 0px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}
 </string>
       </property>
       <property name="text">
        <string/>
       </property>
       <property name="iconSize">
        <size>
         <width>35</width>
         <height>35</height>
        </size>
       </property>
      </widget>
      <widget class="QTableWidget" name="fixedImageTableWidget">
       <property name="geometry">
        <rect>
         <x>10</x>
         <y>35</y>
         <width>685</width>
         <height>75</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QTableView {
    background-color: #5a5a5a;
    color: #e6e6e6; 
    font-weight: bold;
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 0px; /* Optional: Rounded corners */
}

QHeaderView::section {
    border: 0px solid #e6e6e6; /* Border  */
    gridline-color: #e6e6e6; /* Set the color of the gridlines */
    background-color: #646464;
    color: #e6e6e6; 
    font-weight: bold;
    padding: 4px;
}

QHeaderView {
	border: 0px solid #e6e6e6; /* Border  */
    background-color: #646464; /* Background for the entire header area */
}

QTableCornerButton::section {
    background-color: #646464; /* Match the header background */
}

QTableWidget::item {
    border: 0px solid #e6e6e6; /* Border  */
    gridline-color: #e6e6e6; /* Set the color of the gridlines */
	text-align: center;
}

QTableView::viewport {
    background-color: #646464; /* Background beneath the last row */
}

QTableWidget::item:selected {
    background-color: #666f75; /* background for selected cells */
   color: #e6e6e6; /* Text color for selected cells */
}

QTableWidget::item:selected:!active {
    background-color: #5a5a5a; /* background when table loses focus */
    color: #e6e6e6; /* Text color */
}

QTableWidget QLineEdit {
    background-color: #666f75; /* Background when editing (light orange) */
    color: #e6e6e6; /* Text color while editing */
    border: 1px solid #e6e6e6; /* Border for the editor */
}</string>
       </property>
       <property name="editTriggers">
        <set>QAbstractItemView::NoEditTriggers</set>
       </property>
       <property name="rowCount">
        <number>1</number>
       </property>
       <property name="columnCount">
        <number>2</number>
       </property>
       <attribute name="horizontalHeaderMinimumSectionSize">
        <number>75</number>
       </attribute>
       <attribute name="horizontalHeaderDefaultSectionSize">
        <number>227</number>
       </attribute>
       <attribute name="horizontalHeaderStretchLastSection">
        <bool>true</bool>
       </attribute>
       <attribute name="verticalHeaderVisible">
        <bool>false</bool>
       </attribute>
       <attribute name="verticalHeaderMinimumSectionSize">
        <number>25</number>
       </attribute>
       <attribute name="verticalHeaderDefaultSectionSize">
        <number>25</number>
       </attribute>
       <row/>
       <column/>
       <column/>
      </widget>
      <widget class="QPushButton" name="deleteFixedImageButton">
       <property name="enabled">
        <bool>true</bool>
       </property>
       <property name="geometry">
        <rect>
         <x>755</x>
         <y>79</y>
         <width>50</width>
         <height>30</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>Delete</string>
       </property>
      </widget>
      <widget class="QPushButton" name="keepFixedImageButton">
       <property name="enabled">
        <bool>true</bool>
       </property>
       <property name="geometry">
        <rect>
         <x>700</x>
         <y>79</y>
         <width>50</width>
         <height>30</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>Keep</string>
       </property>
      </widget>
      <zorder>fixedImageTableWidget</zorder>
      <zorder>FixedImageTableHeaderText</zorder>
      <zorder>chooseFixedImageButton</zorder>
      <zorder>deleteFixedImageButton</zorder>
      <zorder>keepFixedImageButton</zorder>
     </widget>
     <widget class="QFrame" name="DefineMovingImageFrame">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>140</y>
        <width>815</width>
        <height>275</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QFrame { 
	background-color: #4b4b4b;
	border: 1px solid #e6e6e6; /* Border  */
}</string>
      </property>
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
      <widget class="QTextEdit" name="MovingImageTableHeaderText">
       <property name="geometry">
        <rect>
         <x>0</x>
         <y>0</y>
         <width>815</width>
         <height>25</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QTextEdit { 
	background-color: #4b4b4b;
	color: #e6e6e6; /* Text color */
	border: 1px solid #e6e6e6; /* Border  */
    text-align: left;
    font-weight: bold;
}</string>
       </property>
       <property name="verticalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="horizontalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="readOnly">
        <bool>true</bool>
       </property>
       <property name="html">
        <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'MS Shell Dlg 2'; font-size:9pt; font-weight:600; font-style:normal;&quot;&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;Define Moving Image(s)&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
      </widget>
      <widget class="QTableWidget" name="movingImageTableWidget">
       <property name="geometry">
        <rect>
         <x>10</x>
         <y>35</y>
         <width>685</width>
         <height>230</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QTableView {
    background-color: #5a5a5a;
    color: #e6e6e6; 
    font-weight: bold;
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 0px; /* Optional: Rounded corners */
}

QHeaderView::section {
    border: 0px solid #e6e6e6; /* Border  */
    gridline-color: #e6e6e6; /* Set the color of the gridlines */
    background-color: #646464;
    color: #e6e6e6; 
    font-weight: bold;
    padding: 4px;
}

QHeaderView {
	border: 0px solid #e6e6e6; /* Border  */
    background-color: #646464; /* Background for the entire header area */
}

QTableCornerButton::section {
    background-color: #646464; /* Match the header background */
}

QTableWidget::item {
    border: 0px solid #e6e6e6; /* Border  */
    gridline-color: #e6e6e6; /* Set the color of the gridlines */
	text-align: center;
}

QTableView::viewport {
    background-color: #646464; /* Background beneath the last row */
}

QTableWidget::item:selected {
    background-color: #666f75; /* background for selected cells */
   color: #e6e6e6; /* Text color for selected cells */
}

QTableWidget::item:selected:!active {
    background-color: #5a5a5a; /* background when table loses focus */
    color: #e6e6e6; /* Text color */
}

QTableWidget QLineEdit {
    background-color: #666f75; /* Background when editing (light orange) */
    color: #e6e6e6; /* Text color while editing */
    border: 1px solid #e6e6e6; /* Border for the editor */
}</string>
       </property>
       <property name="editTriggers">
        <set>QAbstractItemView::NoEditTriggers</set>
       </property>
       <property name="rowCount">
        <number>1</number>
       </property>
       <property name="columnCount">
        <number>2</number>
       </property>
       <attribute name="horizontalHeaderMinimumSectionSize">
        <number>75</number>
       </attribute>
       <attribute name="horizontalHeaderDefaultSectionSize">
        <number>227</number>
       </attribute>
       <attribute name="horizontalHeaderStretchLastSection">
        <bool>true</bool>
       </attribute>
       <attribute name="verticalHeaderVisible">
        <bool>false</bool>
       </attribute>
       <attribute name="verticalHeaderMinimumSectionSize">
        <number>25</number>
       </attribute>
       <attribute name="verticalHeaderDefaultSectionSize">
        <number>25</number>
       </attribute>
       <row/>
       <column/>
       <column/>
      </widget>
      <widget class="QPushButton" name="chooseMovingImageButton">
       <property name="geometry">
        <rect>
         <x>694</x>
         <y>35</y>
         <width>41</width>
         <height>31</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #323232;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 0px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}
 </string>
       </property>
       <property name="text">
        <string/>
       </property>
       <property name="iconSize">
        <size>
         <width>35</width>
         <height>35</height>
        </size>
       </property>
      </widget>
      <widget class="QPushButton" name="deleteMovingImageButton">
       <property name="geometry">
        <rect>
         <x>755</x>
         <y>79</y>
         <width>50</width>
         <height>30</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>Delete</string>
       </property>
      </widget>
      <widget class="QPushButton" name="keepMovingImageButton">
       <property name="enabled">
        <bool>true</bool>
       </property>
       <property name="geometry">
        <rect>
         <x>700</x>
         <y>79</y>
         <width>50</width>
         <height>30</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>Keep</string>
       </property>
      </widget>
     </widget>
     <widget class="QFrame" name="SetJobFolderFrame">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>425</y>
        <width>815</width>
        <height>120</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QFrame { 
	background-color: #4b4b4b;
	border: 1px solid #e6e6e6; /* Border  */
}</string>
      </property>
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
      <widget class="QTextEdit" name="JobFolderTableHeaderText">
       <property name="geometry">
        <rect>
         <x>0</x>
         <y>0</y>
         <width>815</width>
         <height>25</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QTextEdit { 
	background-color: #4b4b4b;
	color: #e6e6e6; /* Text color */
	border: 1px solid #e6e6e6; /* Border  */
    text-align: left;
    font-weight: bold;
}</string>
       </property>
       <property name="verticalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="horizontalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="readOnly">
        <bool>true</bool>
       </property>
       <property name="html">
        <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'MS Shell Dlg 2'; font-size:9pt; font-weight:600; font-style:normal;&quot;&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;Set Job Folder (where to save results)&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
      </widget>
      <widget class="QCheckBox" name="JobFolderCheckBox">
       <property name="geometry">
        <rect>
         <x>700</x>
         <y>74</y>
         <width>101</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>8</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    background-color: #4b4b4b;
    color: #e6e6e6; /* Text color */
    padding: 2px; /* Optional: space around the text */
	width: 100px; /* Optional: Adjust width to allow for wrapping */
    word-wrap: break-word; /* Enable word wrap */
}
</string>
       </property>
       <property name="text">
        <string>Use Fixed 
Image Folder</string>
       </property>
      </widget>
      <widget class="QTableWidget" name="setJobTableWidget">
       <property name="geometry">
        <rect>
         <x>10</x>
         <y>35</y>
         <width>685</width>
         <height>75</height>
        </rect>
       </property>
       <property name="styleSheet">
        <string notr="true">QTableView {
    background-color: #5a5a5a;
    color: #e6e6e6; 
    font-weight: bold;
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 0px; /* Optional: Rounded corners */
}

QHeaderView::section {
    border: 0px solid #e6e6e6; /* Border  */
    gridline-color: #e6e6e6; /* Set the color of the gridlines */
    background-color: #646464;
    color: #e6e6e6; 
    font-weight: bold;
    padding: 4px;
}

QHeaderView {
	border: 0px solid #e6e6e6; /* Border  */
    background-color: #646464; /* Background for the entire header area */
}

QTableCornerButton::section {
    background-color: #646464; /* Match the header background */
}

QTableWidget::item {
    border: 0px solid #e6e6e6; /* Border  */
    gridline-color: #e6e6e6; /* Set the color of the gridlines */
	text-align: center;
}

QTableView::viewport {
    background-color: #646464; /* Background beneath the last row */
}

QTableWidget::item:selected {
    background-color: #666f75; /* background for selected cells */
   color: #e6e6e6; /* Text color for selected cells */
}

QTableWidget::item:selected:!active {
    background-color: #5a5a5a; /* background when table loses focus */
    color: #e6e6e6; /* Text color */
}

QTableWidget QLineEdit {
    background-color: #666f75; /* Background when editing (light orange) */
    color: #e6e6e6; /* Text color while editing */
    border: 1px solid #e6e6e6; /* Border for the editor */
}</string>
       </property>
       <property name="editTriggers">
        <set>QAbstractItemView::NoEditTriggers</set>
       </property>
       <property name="rowCount">
        <number>1</number>
       </property>
       <property name="columnCount">
        <number>2</number>
       </property>
       <attribute name="horizontalHeaderMinimumSectionSize">
        <number>75</number>
       </attribute>
       <attribute name="horizontalHeaderDefaultSectionSize">
        <number>340</number>
       </attribute>
       <attribute name="horizontalHeaderStretchLastSection">
        <bool>true</bool>
       </attribute>
       <attribute name="verticalHeaderVisible">
        <bool>false</bool>
       </attribute>
       <attribute name="verticalHeaderMinimumSectionSize">
        <number>25</number>
       </attribute>
       <attribute name="verticalHeaderDefaultSectionSize">
        <number>25</number>
       </attribute>
       <row/>
       <column/>
       <column/>
      </widget>
      <widget class="QPushButton" name="chooseJobFolderButton">
       <property name="geometry">
        <rect>
         <x>694</x>
         <y>35</y>
         <width>41</width>
         <height>31</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #323232;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 0px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}
 </string>
       </property>
       <property name="text">
        <string/>
       </property>
       <property name="iconSize">
        <size>
         <width>35</width>
         <height>35</height>
        </size>
       </property>
      </widget>
      <zorder>JobFolderCheckBox</zorder>
      <zorder>JobFolderTableHeaderText</zorder>
      <zorder>setJobTableWidget</zorder>
      <zorder>chooseJobFolderButton</zorder>
     </widget>
     <widget class="QPushButton" name="loadTemplateButton">
      <property name="geometry">
       <rect>
        <x>20</x>
        <y>555</y>
        <width>110</width>
        <height>30</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <pointsize>9</pointsize>
        <weight>75</weight>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
      </property>
      <property name="text">
       <string>Load Template</string>
      </property>
     </widget>
     <widget class="QPushButton" name="NavigationButton">
      <property name="geometry">
       <rect>
        <x>350</x>
        <y>620</y>
        <width>65</width>
        <height>30</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <pointsize>9</pointsize>
        <weight>75</weight>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 1px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
      </property>
      <property name="text">
       <string>Navigate</string>
      </property>
     </widget>
     <widget class="QFrame" name="WhatNextControlFrame">
      <property name="geometry">
       <rect>
        <x>425</x>
        <y>585</y>
        <width>405</width>
        <height>75</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QFrame { 
	background-color: #4b4b4b;
	border: 1px solid #e6e6e6; /* Border  */
}</string>
      </property>
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
      <widget class="QTextEdit" name="WhatNextText">
       <property name="geometry">
        <rect>
         <x>0</x>
         <y>0</y>
         <width>405</width>
         <height>25</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QTextEdit { 
	background-color: #4b4b4b;
	color: #e6e6e6; /* Text color */
	border: 1px solid #e6e6e6; /* Border  */
    text-align: left;
    font-weight: bold;
}</string>
       </property>
       <property name="verticalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="horizontalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="readOnly">
        <bool>true</bool>
       </property>
       <property name="html">
        <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'MS Shell Dlg 2'; font-size:9pt; font-weight:600; font-style:normal;&quot;&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;App Navigation&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
      </widget>
      <widget class="QPushButton" name="GoToImportProjectTab">
       <property name="geometry">
        <rect>
         <x>5</x>
         <y>35</y>
         <width>48</width>
         <height>30</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 1px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>Set Up</string>
       </property>
      </widget>
      <widget class="QPushButton" name="GoToFiducialsTab">
       <property name="geometry">
        <rect>
         <x>58</x>
         <y>35</y>
         <width>58</width>
         <height>30</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 1px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>Fiducials</string>
       </property>
      </widget>
      <widget class="QPushButton" name="GoToApplyImageTab">
       <property name="geometry">
        <rect>
         <x>197</x>
         <y>35</y>
         <width>80</width>
         <height>30</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 1px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>Align Image</string>
       </property>
      </widget>
      <widget class="QPushButton" name="GoToCoordsTab">
       <property name="geometry">
        <rect>
         <x>121</x>
         <y>35</y>
         <width>71</width>
         <height>30</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 1px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>Align Data</string>
       </property>
      </widget>
      <widget class="QPushButton" name="CloseNavigationButton">
       <property name="geometry">
        <rect>
         <x>335</x>
         <y>35</y>
         <width>65</width>
         <height>30</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 1px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>Close</string>
       </property>
      </widget>
      <widget class="QPushButton" name="GoToJobStatusTab">
       <property name="geometry">
        <rect>
         <x>282</x>
         <y>35</y>
         <width>48</width>
         <height>30</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 1px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>Status</string>
       </property>
      </widget>
     </widget>
     <zorder>DefineFixedImageFrame</zorder>
     <zorder>DefineMovingImageFrame</zorder>
     <zorder>SetJobFolderFrame</zorder>
     <zorder>loadTemplateButton</zorder>
     <zorder>WhatNextControlFrame</zorder>
     <zorder>NavigationButton</zorder>
    </widget>
    <widget class="QWidget" name="AlignImageTabName">
     <attribute name="title">
      <string>Set Fiducials</string>
     </attribute>
     <widget class="QFrame" name="ChooseMovingImageFrame">
      <property name="geometry">
       <rect>
        <x>350</x>
        <y>10</y>
        <width>480</width>
        <height>85</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QFrame { 
	background-color: #4b4b4b;
	border: 1px solid #e6e6e6; /* Border  */
}</string>
      </property>
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
      <widget class="QPushButton" name="LoadNewMovingImageButton">
       <property name="geometry">
        <rect>
         <x>380</x>
         <y>10</y>
         <width>91</width>
         <height>30</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>Load Image</string>
       </property>
      </widget>
      <widget class="QPushButton" name="LoadOldMovingImageButton">
       <property name="geometry">
        <rect>
         <x>380</x>
         <y>46</y>
         <width>91</width>
         <height>30</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>Load Image</string>
       </property>
      </widget>
      <widget class="QComboBox" name="MovingImagesComboBox">
       <property name="geometry">
        <rect>
         <x>170</x>
         <y>12</y>
         <width>201</width>
         <height>25</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>10</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QComboBox {
    background-color: #707070; /* Light gray background color */
    color: #e6e6e6; /* Dark gray font color */
    padding: 5px; /* Optional: adds padding inside the combobox */
    border: 1px solid #555555; /* Optional: border color */
    border-radius: 5px; /* Optional: rounded corners */
}

QComboBox QAbstractItemView { /* Styles for dropdown list */
    background-color: #707070; /* Dropdown background color */
    color: #e6e6e6; /* Dropdown font color */
    selection-background-color: #cce5ff; /* Background color when an item is selected */
    selection-color: #e6e6e6; /* Font color of selected item */
}

</string>
       </property>
      </widget>
      <widget class="QTextEdit" name="MovingImagesText">
       <property name="geometry">
        <rect>
         <x>5</x>
         <y>13</y>
         <width>160</width>
         <height>27</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QTextEdit { 
	background-color: #4b4b4b;
	color: #e6e6e6; /* Text color */
	border: 1px solid #4b4b4b; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
}</string>
       </property>
       <property name="verticalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="horizontalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="readOnly">
        <bool>true</bool>
       </property>
       <property name="html">
        <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'MS Shell Dlg 2'; font-size:9pt; font-weight:400; font-style:normal;&quot;&gt;
&lt;p align=&quot;right&quot; style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:8.25pt; font-weight:600;&quot;&gt;Register Moving Image&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
      </widget>
      <widget class="QTextEdit" name="OldMovingImagesText">
       <property name="geometry">
        <rect>
         <x>5</x>
         <y>49</y>
         <width>160</width>
         <height>27</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QTextEdit { 
	background-color: #4b4b4b;
	color: #e6e6e6; /* Text color */
	border: 1px solid #4b4b4b; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
}</string>
       </property>
       <property name="verticalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="horizontalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="readOnly">
        <bool>true</bool>
       </property>
       <property name="html">
        <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'MS Shell Dlg 2'; font-size:9pt; font-weight:400; font-style:normal;&quot;&gt;
&lt;p align=&quot;right&quot; style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:8.25pt; font-weight:600;&quot;&gt;Re-register Moving Image&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
      </widget>
      <widget class="QComboBox" name="OldMovingImagesComboBox">
       <property name="geometry">
        <rect>
         <x>170</x>
         <y>48</y>
         <width>201</width>
         <height>25</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>10</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QComboBox {
    background-color: #707070; /* Light gray background color */
    color: #e6e6e6; /* Dark gray font color */
    padding: 5px; /* Optional: adds padding inside the combobox */
    border: 1px solid #555555; /* Optional: border color */
    border-radius: 5px; /* Optional: rounded corners */
}

QComboBox QAbstractItemView { /* Styles for dropdown list */
    background-color: #707070; /* Dropdown background color */
    color: #e6e6e6; /* Dropdown font color */
    selection-background-color: #cce5ff; /* Background color when an item is selected */
    selection-color: #e6e6e6; /* Font color of selected item */
}

</string>
       </property>
      </widget>
     </widget>
     <widget class="QFrame" name="FiducialPointControlsFrame">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>585</y>
        <width>250</width>
        <height>75</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QFrame { 
	background-color: #4b4b4b;
	border: 1px solid #e6e6e6; /* Border  */
}</string>
      </property>
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
      <widget class="QTextEdit" name="FiducialFrameHeaderText">
       <property name="geometry">
        <rect>
         <x>0</x>
         <y>0</y>
         <width>250</width>
         <height>25</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>10</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QTextEdit { 
	background-color: #4b4b4b;
	color: #e6e6e6; /* Text color */
	border: 1px solid #e6e6e6; /* Border  */
    text-align: left;
    font-weight: bold;
}</string>
       </property>
       <property name="verticalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="horizontalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="readOnly">
        <bool>true</bool>
       </property>
       <property name="html">
        <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'MS Shell Dlg 2'; font-size:10pt; font-weight:600; font-style:normal;&quot;&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:9pt;&quot;&gt;Fiducial Point View&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
      </widget>
      <widget class="QPushButton" name="AddFiducialButton">
       <property name="geometry">
        <rect>
         <x>10</x>
         <y>35</y>
         <width>55</width>
         <height>30</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>Add</string>
       </property>
      </widget>
      <widget class="QPushButton" name="ColorFiducialButton">
       <property name="geometry">
        <rect>
         <x>135</x>
         <y>35</y>
         <width>45</width>
         <height>30</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>Color</string>
       </property>
      </widget>
      <widget class="QPushButton" name="ShrinkFiducialButton">
       <property name="geometry">
        <rect>
         <x>185</x>
         <y>38</y>
         <width>25</width>
         <height>25</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>-</string>
       </property>
      </widget>
      <widget class="QPushButton" name="GrowFiducialButton">
       <property name="geometry">
        <rect>
         <x>215</x>
         <y>38</y>
         <width>25</width>
         <height>25</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>+</string>
       </property>
      </widget>
      <widget class="QPushButton" name="DeleteAllButton">
       <property name="geometry">
        <rect>
         <x>70</x>
         <y>35</y>
         <width>55</width>
         <height>30</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>Delete</string>
       </property>
      </widget>
      <zorder>DeleteAllButton</zorder>
      <zorder>FiducialFrameHeaderText</zorder>
      <zorder>AddFiducialButton</zorder>
      <zorder>GrowFiducialButton</zorder>
      <zorder>ColorFiducialButton</zorder>
      <zorder>ShrinkFiducialButton</zorder>
     </widget>
     <widget class="QFrame" name="FixedImageDisplayFrame">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>125</y>
        <width>400</width>
        <height>376</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QFrame { 
	background-color: #4b4b4b;
	border: 0px solid #e6e6e6; /* Border  */
}</string>
      </property>
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
     </widget>
     <widget class="QFrame" name="MovingImageDisplayFrame">
      <property name="geometry">
       <rect>
        <x>425</x>
        <y>125</y>
        <width>400</width>
        <height>376</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QFrame { 
	background-color: #4b4b4b;
	border: 0px solid #e6e6e6; /* Border  */
}</string>
      </property>
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
     </widget>
     <widget class="QTextEdit" name="FiducialTabUpdateText">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>510</y>
        <width>341</width>
        <height>24</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <pointsize>9</pointsize>
        <weight>75</weight>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QTextEdit { 
	background-color: #323232;
	color: #e6e6e6; /* Text color */
	border: 1px solid #323232; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    text-align: left;
    font-weight: bold;
}</string>
      </property>
      <property name="verticalScrollBarPolicy">
       <enum>Qt::ScrollBarAlwaysOff</enum>
      </property>
      <property name="horizontalScrollBarPolicy">
       <enum>Qt::ScrollBarAlwaysOff</enum>
      </property>
      <property name="html">
       <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'MS Shell Dlg 2'; font-size:9pt; font-weight:600; font-style:normal;&quot;&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;Calculating Point Cloud Registration. Please Wait...&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
      </property>
     </widget>
     <widget class="QLabel" name="MovingImageBorder">
      <property name="geometry">
       <rect>
        <x>422</x>
        <y>122</y>
        <width>406</width>
        <height>382</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel {
        background-color: transparent; /* Transparent fill */
        border: 5px solid #e6e6e6;       /* Green border */
    }
</string>
      </property>
      <property name="text">
       <string/>
      </property>
     </widget>
     <widget class="QLabel" name="FixedImageFrameHeaderText">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>96</y>
        <width>400</width>
        <height>24</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <pointsize>11</pointsize>
        <weight>75</weight>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel { 
	background-color: transparent;
	color: #e6e6e6; /* Text color */
	border: 0px solid #e6e6e6; /* Border  */
    qproperty-alignment: 'AlignCenter';
}</string>
      </property>
      <property name="text">
       <string> Fixed Image</string>
      </property>
     </widget>
     <widget class="QLabel" name="MovingImageFrameHeaderText">
      <property name="geometry">
       <rect>
        <x>422</x>
        <y>96</y>
        <width>400</width>
        <height>24</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <pointsize>11</pointsize>
        <weight>75</weight>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel { 
	background-color: transparent;
	color: #e6e6e6; /* Text color */
	border: 0px solid #e6e6e6; /* Border  */
    qproperty-alignment: 'AlignCenter';
}</string>
      </property>
      <property name="text">
       <string> Moving Image</string>
      </property>
     </widget>
     <widget class="QLabel" name="FixedImageBorder">
      <property name="geometry">
       <rect>
        <x>7</x>
        <y>122</y>
        <width>406</width>
        <height>382</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel {
        background-color: transparent; /* Transparent fill */
        border: 5px solid #e6e6e6;       /* Green border */
    }
</string>
      </property>
      <property name="text">
       <string/>
      </property>
     </widget>
     <widget class="QPushButton" name="PickNewMovingImageButton">
      <property name="geometry">
       <rect>
        <x>270</x>
        <y>585</y>
        <width>140</width>
        <height>30</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <pointsize>9</pointsize>
        <weight>75</weight>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
      </property>
      <property name="text">
       <string>View New Image</string>
      </property>
     </widget>
     <widget class="QPushButton" name="AttemptICPRegistrationButton">
      <property name="geometry">
       <rect>
        <x>270</x>
        <y>620</y>
        <width>140</width>
        <height>30</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <pointsize>9</pointsize>
        <weight>75</weight>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
    background-color: #447544;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #488a48; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #49a349; /* More blue when pressed */
}</string>
      </property>
      <property name="text">
       <string>Calculate Transform</string>
      </property>
     </widget>
     <widget class="QPushButton" name="KeyboardShortcutsButton">
      <property name="geometry">
       <rect>
        <x>700</x>
        <y>620</y>
        <width>130</width>
        <height>30</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <pointsize>9</pointsize>
        <weight>75</weight>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
      </property>
      <property name="text">
       <string>Keyboard Shortcuts</string>
      </property>
     </widget>
     <widget class="QFrame" name="DisableFrame_F1">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>10</y>
        <width>10</width>
        <height>10</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QFrame { 
	background-color: rgba(115, 115, 115, 0.4);
	border: 1px solid #e6e6e6; /* Border  */
}</string>
      </property>
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
      <widget class="QFrame" name="DisableFrame_E1_9">
       <property name="geometry">
        <rect>
         <x>-190</x>
         <y>30</y>
         <width>31</width>
         <height>31</height>
        </rect>
       </property>
       <property name="styleSheet">
        <string notr="true">QFrame { 
	background-color: rgba(255, 255, 255, 0.4);
	border: 1px solid #e6e6e6; /* Border  */
}</string>
       </property>
       <property name="frameShape">
        <enum>QFrame::StyledPanel</enum>
       </property>
       <property name="frameShadow">
        <enum>QFrame::Raised</enum>
       </property>
      </widget>
     </widget>
     <zorder>ChooseMovingImageFrame</zorder>
     <zorder>FixedImageBorder</zorder>
     <zorder>MovingImageBorder</zorder>
     <zorder>FiducialPointControlsFrame</zorder>
     <zorder>FixedImageDisplayFrame</zorder>
     <zorder>MovingImageDisplayFrame</zorder>
     <zorder>FiducialTabUpdateText</zorder>
     <zorder>FixedImageFrameHeaderText</zorder>
     <zorder>MovingImageFrameHeaderText</zorder>
     <zorder>PickNewMovingImageButton</zorder>
     <zorder>AttemptICPRegistrationButton</zorder>
     <zorder>KeyboardShortcutsButton</zorder>
     <zorder>DisableFrame_F1</zorder>
    </widget>
    <widget class="QWidget" name="AlignDataTabName">
     <attribute name="title">
      <string>Align Data</string>
     </attribute>
     <widget class="QLabel" name="RegisterCoordsFrameHeaderText">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>174</y>
        <width>510</width>
        <height>24</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <pointsize>11</pointsize>
        <weight>75</weight>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel { 
	background-color: transparent;
	color: #e6e6e6; /* Text color */
	border: 0px solid #e6e6e6; /* Border  */
    qproperty-alignment: 'AlignCenter';
}</string>
      </property>
      <property name="text">
       <string>Unregistered Moving Image</string>
      </property>
     </widget>
     <widget class="QFrame" name="RegisterCoordsDisplayFrame">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>203</y>
        <width>530</width>
        <height>360</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QFrame { 
	background-color: #4b4b4b;
	border: 0px solid #e6e6e6; /* Border  */
}</string>
      </property>
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
     </widget>
     <widget class="QLabel" name="RegisterCoordsImageBorder">
      <property name="geometry">
       <rect>
        <x>7</x>
        <y>200</y>
        <width>536</width>
        <height>366</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel {
        background-color: transparent; /* Transparent fill */
        border: 5px solid #e6e6e6;       /* Green border */
    }
</string>
      </property>
      <property name="text">
       <string/>
      </property>
     </widget>
     <widget class="QFrame" name="ImageViewControlsFrame_C">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>585</y>
        <width>150</width>
        <height>75</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QFrame { 
	background-color: #4b4b4b;
	border: 1px solid #e6e6e6; /* Border  */
}</string>
      </property>
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
      <widget class="QTextEdit" name="ImageViewFrameHeaderText_C">
       <property name="geometry">
        <rect>
         <x>0</x>
         <y>0</y>
         <width>150</width>
         <height>25</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>10</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QTextEdit { 
	background-color: #4b4b4b;
	color: #e6e6e6; /* Text color */
	border: 1px solid #e6e6e6; /* Border  */
    text-align: left;
    font-weight: bold;
}</string>
       </property>
       <property name="verticalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="horizontalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="readOnly">
        <bool>true</bool>
       </property>
       <property name="html">
        <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'MS Shell Dlg 2'; font-size:10pt; font-weight:600; font-style:normal;&quot;&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:9pt;&quot;&gt;Fiducial Point View&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
      </widget>
      <widget class="QPushButton" name="ColorFiducialButton_C">
       <property name="geometry">
        <rect>
         <x>10</x>
         <y>35</y>
         <width>45</width>
         <height>30</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>Color</string>
       </property>
      </widget>
      <widget class="QPushButton" name="GrowFiducialButton_C">
       <property name="geometry">
        <rect>
         <x>90</x>
         <y>38</y>
         <width>25</width>
         <height>25</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>+</string>
       </property>
      </widget>
      <widget class="QPushButton" name="ShrinkFiducialButton_C">
       <property name="geometry">
        <rect>
         <x>60</x>
         <y>38</y>
         <width>25</width>
         <height>25</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>-</string>
       </property>
      </widget>
     </widget>
     <widget class="QFrame" name="RegisterCoordinatesFrame">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>10</y>
        <width>810</width>
        <height>155</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QFrame { 
	background-color: #4b4b4b;
	border: 1px solid #e6e6e6; /* Border  */
}</string>
      </property>
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
      <widget class="QTextEdit" name="RegisterCoordinatesTableHeaderText">
       <property name="geometry">
        <rect>
         <x>0</x>
         <y>0</y>
         <width>810</width>
         <height>25</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>10</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QTextEdit { 
	background-color: #4b4b4b;
	color: #e6e6e6; /* Text color */
	border: 1px solid #e6e6e6; /* Border  */
    text-align: left;
    font-weight: bold;
}</string>
       </property>
       <property name="verticalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="horizontalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="readOnly">
        <bool>true</bool>
       </property>
       <property name="html">
        <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'MS Shell Dlg 2'; font-size:10pt; font-weight:600; font-style:normal;&quot;&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;Define Coordinates to Register&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
      </widget>
      <widget class="QPushButton" name="chooseCoordinatesFileButton">
       <property name="geometry">
        <rect>
         <x>10</x>
         <y>35</y>
         <width>41</width>
         <height>31</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #323232;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 0px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}
 </string>
       </property>
       <property name="text">
        <string/>
       </property>
       <property name="iconSize">
        <size>
         <width>35</width>
         <height>35</height>
        </size>
       </property>
      </widget>
      <widget class="QTableWidget" name="RegisterCoordinatesTableWidget">
       <property name="geometry">
        <rect>
         <x>10</x>
         <y>65</y>
         <width>791</width>
         <height>80</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QTableView {
    background-color: #5a5a5a;
    color: #e6e6e6; 
    font-weight: bold;
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 0px; /* Optional: Rounded corners */
}

QHeaderView::section {
    border: 0px solid #e6e6e6; /* Border  */
    gridline-color: #e6e6e6; /* Set the color of the gridlines */
    background-color: #646464;
    color: #e6e6e6; 
    font-weight: bold;
    padding: 4px;
}

QHeaderView {
	border: 0px solid #e6e6e6; /* Border  */
    background-color: #646464; /* Background for the entire header area */
}

QTableCornerButton::section {
    background-color: #646464; /* Match the header background */
}

QTableWidget::item {
    border: 0px solid #e6e6e6; /* Border  */
    gridline-color: #e6e6e6; /* Set the color of the gridlines */
	text-align: center;
}

QTableView::viewport {
    background-color: #646464; /* Background beneath the last row */
}

QTableWidget::item:selected {
    background-color: #666f75; /* background for selected cells */
   color: #e6e6e6; /* Text color for selected cells */
}

QTableWidget::item:selected:!active {
    background-color: #5a5a5a; /* background when table loses focus */
    color: #e6e6e6; /* Text color */
}

QTableWidget QLineEdit {
    background-color: #666f75; /* Background when editing (light orange) */
    color: #e6e6e6; /* Text color while editing */
    border: 1px solid #e6e6e6; /* Border for the editor */
}</string>
       </property>
       <property name="editTriggers">
        <set>QAbstractItemView::NoEditTriggers</set>
       </property>
       <property name="rowCount">
        <number>1</number>
       </property>
       <property name="columnCount">
        <number>7</number>
       </property>
       <attribute name="horizontalHeaderCascadingSectionResizes">
        <bool>true</bool>
       </attribute>
       <attribute name="horizontalHeaderMinimumSectionSize">
        <number>50</number>
       </attribute>
       <attribute name="horizontalHeaderDefaultSectionSize">
        <number>90</number>
       </attribute>
       <attribute name="horizontalHeaderStretchLastSection">
        <bool>true</bool>
       </attribute>
       <attribute name="verticalHeaderVisible">
        <bool>false</bool>
       </attribute>
       <attribute name="verticalHeaderMinimumSectionSize">
        <number>25</number>
       </attribute>
       <attribute name="verticalHeaderDefaultSectionSize">
        <number>25</number>
       </attribute>
       <row/>
       <column/>
       <column/>
       <column/>
       <column/>
       <column/>
       <column/>
       <column/>
      </widget>
      <widget class="QTextEdit" name="BrowseForCoordinatesFileText">
       <property name="geometry">
        <rect>
         <x>51</x>
         <y>38</y>
         <width>201</width>
         <height>24</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QTextEdit { 
	background-color: transparent;
	color: #e6e6e6; /* Text color */
	border: 0px solid #4b4b4b; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
}</string>
       </property>
       <property name="verticalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="horizontalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="readOnly">
        <bool>true</bool>
       </property>
       <property name="html">
        <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'MS Shell Dlg 2'; font-size:9pt; font-weight:600; font-style:normal;&quot;&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;Browse for Coordinates File&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
      </widget>
      <widget class="QComboBox" name="CorrespondingImageComboBox">
       <property name="geometry">
        <rect>
         <x>260</x>
         <y>36</y>
         <width>201</width>
         <height>25</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>10</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QComboBox {
    background-color: #707070; /* Light gray background color */
    color: #e6e6e6; /* Dark gray font color */
    padding: 5px; /* Optional: adds padding inside the combobox */
    border: 1px solid #555555; /* Optional: border color */
    border-radius: 5px; /* Optional: rounded corners */
}

QComboBox QAbstractItemView { /* Styles for dropdown list */
    background-color: #707070; /* Dropdown background color */
    color: #e6e6e6; /* Dropdown font color */
    selection-background-color: #cce5ff; /* Background color when an item is selected */
    selection-color: #e6e6e6; /* Font color of selected item */
}

</string>
       </property>
      </widget>
      <widget class="QTextEdit" name="CorrespondingImageText">
       <property name="geometry">
        <rect>
         <x>460</x>
         <y>37</y>
         <width>191</width>
         <height>24</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QTextEdit { 
	background-color: transparent;
	color: #e6e6e6; /* Text color */
	border: 0px solid #4b4b4b; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
}</string>
       </property>
       <property name="verticalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="horizontalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="readOnly">
        <bool>true</bool>
       </property>
       <property name="html">
        <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'MS Shell Dlg 2'; font-size:9pt; font-weight:600; font-style:normal;&quot;&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;Corresponding Image&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
      </widget>
      <widget class="QPushButton" name="LoadCoordinatesButton">
       <property name="geometry">
        <rect>
         <x>740</x>
         <y>30</y>
         <width>61</width>
         <height>30</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>Load </string>
       </property>
      </widget>
      <zorder>RegisterCoordinatesTableHeaderText</zorder>
      <zorder>BrowseForCoordinatesFileText</zorder>
      <zorder>CorrespondingImageComboBox</zorder>
      <zorder>CorrespondingImageText</zorder>
      <zorder>chooseCoordinatesFileButton</zorder>
      <zorder>RegisterCoordinatesTableWidget</zorder>
      <zorder>LoadCoordinatesButton</zorder>
     </widget>
     <widget class="QFrame" name="CoordinatesOverlayControlsFrame">
      <property name="geometry">
       <rect>
        <x>555</x>
        <y>200</y>
        <width>265</width>
        <height>265</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QFrame { 
	background-color: #4b4b4b;
	border: 1px solid #e6e6e6; /* Border  */
}</string>
      </property>
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
      <widget class="QTextEdit" name="CoordinatesOverlayHeaderText">
       <property name="geometry">
        <rect>
         <x>0</x>
         <y>0</y>
         <width>265</width>
         <height>25</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>10</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QTextEdit { 
	background-color: #4b4b4b;
	color: #e6e6e6; /* Text color */
	border: 1px solid #e6e6e6; /* Border  */
    text-align: left;
    font-weight: bold;
}</string>
       </property>
       <property name="verticalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="horizontalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="readOnly">
        <bool>true</bool>
       </property>
       <property name="html">
        <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'MS Shell Dlg 2'; font-size:10pt; font-weight:600; font-style:normal;&quot;&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:9pt;&quot;&gt;Confirm Coordinates Overlay&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
      </widget>
      <widget class="QPushButton" name="SwapXYButton">
       <property name="geometry">
        <rect>
         <x>10</x>
         <y>35</y>
         <width>85</width>
         <height>30</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>Swap XY</string>
       </property>
      </widget>
      <widget class="QPushButton" name="EditTableButton">
       <property name="geometry">
        <rect>
         <x>100</x>
         <y>35</y>
         <width>85</width>
         <height>30</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>Edit Table</string>
       </property>
      </widget>
      <widget class="QCheckBox" name="UnregisteredMovingCheckBox">
       <property name="geometry">
        <rect>
         <x>160</x>
         <y>67</y>
         <width>100</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>8</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    background-color: #4b4b4b;
    color: #e6e6e6; /* Text color */
    padding: 2px; /* Optional: space around the text */
	width: 100px; /* Optional: Adjust width to allow for wrapping */
    word-wrap: break-word; /* Enable word wrap */
}
</string>
       </property>
       <property name="text">
        <string>Looks Good?</string>
       </property>
      </widget>
      <widget class="QPushButton" name="ViewFixedButton">
       <property name="geometry">
        <rect>
         <x>10</x>
         <y>109</y>
         <width>145</width>
         <height>30</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>Fixed</string>
       </property>
      </widget>
      <widget class="QCheckBox" name="RegisteredMovingCheckBox">
       <property name="geometry">
        <rect>
         <x>160</x>
         <y>141</y>
         <width>100</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>8</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    background-color: #4b4b4b;
    color: #e6e6e6; /* Text color */
    padding: 2px; /* Optional: space around the text */
	width: 100px; /* Optional: Adjust width to allow for wrapping */
    word-wrap: break-word; /* Enable word wrap */
}
</string>
       </property>
       <property name="text">
        <string>Looks Good?</string>
       </property>
      </widget>
      <widget class="QPushButton" name="ViewUnregisteredMovingButton">
       <property name="geometry">
        <rect>
         <x>10</x>
         <y>72</y>
         <width>145</width>
         <height>30</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>Unregistered Moving</string>
       </property>
      </widget>
      <widget class="QCheckBox" name="FixedCheckBox">
       <property name="geometry">
        <rect>
         <x>160</x>
         <y>104</y>
         <width>100</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>8</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    background-color: #4b4b4b;
    color: #e6e6e6; /* Text color */
    padding: 2px; /* Optional: space around the text */
	width: 100px; /* Optional: Adjust width to allow for wrapping */
    word-wrap: break-word; /* Enable word wrap */
}
</string>
       </property>
       <property name="text">
        <string>Looks Good?</string>
       </property>
      </widget>
      <widget class="QPushButton" name="ViewRegisteredMovingButton">
       <property name="geometry">
        <rect>
         <x>10</x>
         <y>146</y>
         <width>145</width>
         <height>30</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>Fiducial Reg Moving</string>
       </property>
      </widget>
      <widget class="QPushButton" name="SaveRegisteredCoordinatesButton">
       <property name="geometry">
        <rect>
         <x>10</x>
         <y>225</y>
         <width>120</width>
         <height>30</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>Save Fiducial Reg</string>
       </property>
      </widget>
      <widget class="QPushButton" name="ViewRegisteredEMovingButton">
       <property name="geometry">
        <rect>
         <x>10</x>
         <y>183</y>
         <width>145</width>
         <height>30</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>Elastic Reg Moving</string>
       </property>
      </widget>
      <widget class="QCheckBox" name="RegisteredEMovingCheckBox">
       <property name="geometry">
        <rect>
         <x>160</x>
         <y>178</y>
         <width>100</width>
         <height>41</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>8</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QCheckBox {
    background-color: #4b4b4b;
    color: #e6e6e6; /* Text color */
    padding: 2px; /* Optional: space around the text */
	width: 100px; /* Optional: Adjust width to allow for wrapping */
    word-wrap: break-word; /* Enable word wrap */
}
</string>
       </property>
       <property name="text">
        <string>Looks Good?</string>
       </property>
      </widget>
      <widget class="QPushButton" name="SaveRegisteredECoordinatesButton">
       <property name="geometry">
        <rect>
         <x>135</x>
         <y>225</y>
         <width>120</width>
         <height>30</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>Save Elastic Reg</string>
       </property>
      </widget>
      <zorder>ViewRegisteredMovingButton</zorder>
      <zorder>CoordinatesOverlayHeaderText</zorder>
      <zorder>SwapXYButton</zorder>
      <zorder>EditTableButton</zorder>
      <zorder>UnregisteredMovingCheckBox</zorder>
      <zorder>ViewFixedButton</zorder>
      <zorder>RegisteredMovingCheckBox</zorder>
      <zorder>ViewUnregisteredMovingButton</zorder>
      <zorder>FixedCheckBox</zorder>
      <zorder>SaveRegisteredCoordinatesButton</zorder>
      <zorder>ViewRegisteredEMovingButton</zorder>
      <zorder>RegisteredEMovingCheckBox</zorder>
      <zorder>SaveRegisteredECoordinatesButton</zorder>
     </widget>
     <widget class="QFrame" name="DisableFrame_C">
      <property name="geometry">
       <rect>
        <x>170</x>
        <y>590</y>
        <width>10</width>
        <height>10</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QFrame { 
	background-color: rgba(255, 255, 255, 0.4);
	border: 1px solid #e6e6e6; /* Border  */
}</string>
      </property>
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
     </widget>
     <widget class="QTextEdit" name="PlottingImageText">
      <property name="geometry">
       <rect>
        <x>555</x>
        <y>470</y>
        <width>270</width>
        <height>24</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <pointsize>9</pointsize>
        <weight>75</weight>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QTextEdit { 
	background-color: #323232;
	color: #e6e6e6; /* Text color */
	border: 1px solid #323232; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    text-align: left;
    font-weight: bold;
}</string>
      </property>
      <property name="verticalScrollBarPolicy">
       <enum>Qt::ScrollBarAlwaysOff</enum>
      </property>
      <property name="horizontalScrollBarPolicy">
       <enum>Qt::ScrollBarAlwaysOff</enum>
      </property>
      <property name="readOnly">
       <bool>true</bool>
      </property>
      <property name="html">
       <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'MS Shell Dlg 2'; font-size:9pt; font-weight:600; font-style:normal;&quot;&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;Plotting Image. Please Wait...&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
      </property>
     </widget>
     <widget class="QFrame" name="DisableFrame_C_2">
      <property name="geometry">
       <rect>
        <x>190</x>
        <y>590</y>
        <width>10</width>
        <height>10</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QFrame { 
	background-color: rgba(255, 255, 255, 0.4);
	border: 1px solid #e6e6e6; /* Border  */
}</string>
      </property>
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
     </widget>
     <widget class="QFrame" name="DisableFrame_C_3">
      <property name="geometry">
       <rect>
        <x>210</x>
        <y>590</y>
        <width>10</width>
        <height>10</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QFrame { 
	background-color: rgba(255, 255, 255, 0.4);
	border: 1px solid #e6e6e6; /* Border  */
}</string>
      </property>
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
     </widget>
     <widget class="QTextEdit" name="MakingCoordOverlayText">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>170</y>
        <width>400</width>
        <height>24</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <pointsize>9</pointsize>
        <weight>75</weight>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QTextEdit { 
	background-color: #323232;
	color: #e6e6e6; /* Text color */
	border: 1px solid #323232; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    text-align: left;
    font-weight: bold;
}</string>
      </property>
      <property name="verticalScrollBarPolicy">
       <enum>Qt::ScrollBarAlwaysOff</enum>
      </property>
      <property name="horizontalScrollBarPolicy">
       <enum>Qt::ScrollBarAlwaysOff</enum>
      </property>
      <property name="html">
       <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'MS Shell Dlg 2'; font-size:9pt; font-weight:600; font-style:normal;&quot;&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;Making the Coordinate Overlay Image. Please Wait...&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
      </property>
     </widget>
     <zorder>MakingCoordOverlayText</zorder>
     <zorder>RegisterCoordinatesFrame</zorder>
     <zorder>RegisterCoordsImageBorder</zorder>
     <zorder>RegisterCoordsFrameHeaderText</zorder>
     <zorder>RegisterCoordsDisplayFrame</zorder>
     <zorder>ImageViewControlsFrame_C</zorder>
     <zorder>CoordinatesOverlayControlsFrame</zorder>
     <zorder>DisableFrame_C</zorder>
     <zorder>PlottingImageText</zorder>
     <zorder>DisableFrame_C_2</zorder>
     <zorder>DisableFrame_C_3</zorder>
    </widget>
    <widget class="QWidget" name="JobStatusTabName">
     <attribute name="title">
      <string>Job Status</string>
     </attribute>
     <widget class="QFrame" name="JobStatusFrame">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>10</y>
        <width>811</width>
        <height>451</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QFrame { 
	background-color: #4b4b4b;
	border: 1px solid #e6e6e6; /* Border  */
}</string>
      </property>
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
      <widget class="QTextEdit" name="JobStatusHeaderText">
       <property name="geometry">
        <rect>
         <x>0</x>
         <y>0</y>
         <width>811</width>
         <height>25</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QTextEdit { 
	background-color: #4b4b4b;
	color: #e6e6e6; /* Text color */
	border: 1px solid #e6e6e6; /* Border  */
    text-align: left;
    font-weight: bold;
}</string>
       </property>
       <property name="verticalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="horizontalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="readOnly">
        <bool>true</bool>
       </property>
       <property name="html">
        <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'MS Shell Dlg 2'; font-size:9pt; font-weight:600; font-style:normal;&quot;&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;Job Status for each Moving Image&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
      </widget>
      <widget class="QTableWidget" name="JobStatusTableWidget">
       <property name="geometry">
        <rect>
         <x>10</x>
         <y>35</y>
         <width>791</width>
         <height>401</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QTableView {
    background-color: #5a5a5a;
    color: #e6e6e6; 
    font-weight: bold;
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 0px; /* Optional: Rounded corners */
}

QHeaderView::section {
    border: 0px solid #e6e6e6; /* Border  */
    gridline-color: #e6e6e6; /* Set the color of the gridlines */
    background-color: #646464;
    color: #e6e6e6; 
    font-weight: bold;
    padding: 4px;
}

QHeaderView {
	border: 0px solid #e6e6e6; /* Border  */
    background-color: #646464; /* Background for the entire header area */
}

QTableCornerButton::section {
    background-color: #646464; /* Match the header background */
}

QTableWidget::item {
    border: 0px solid #e6e6e6; /* Border  */
    gridline-color: #e6e6e6; /* Set the color of the gridlines */
}

QTableView::viewport {
    background-color: #646464; /* Background beneath the last row */
}

QTableWidget::item:selected {
    background-color: #666f75; /* background for selected cells */
   color: #e6e6e6; /* Text color for selected cells */
}

QTableWidget::item:selected:!active {
    background-color: #5a5a5a; /* background when table loses focus */
    color: #e6e6e6; /* Text color */
}

QTableWidget QLineEdit {
    background-color: #666f75; /* Background when editing (light orange) */
    color: #e6e6e6; /* Text color while editing */
    border: 1px solid #e6e6e6; /* Border for the editor */
}</string>
       </property>
       <property name="editTriggers">
        <set>QAbstractItemView::NoEditTriggers</set>
       </property>
       <property name="rowCount">
        <number>1</number>
       </property>
       <property name="columnCount">
        <number>5</number>
       </property>
       <attribute name="horizontalHeaderMinimumSectionSize">
        <number>75</number>
       </attribute>
       <attribute name="horizontalHeaderDefaultSectionSize">
        <number>150</number>
       </attribute>
       <attribute name="horizontalHeaderStretchLastSection">
        <bool>true</bool>
       </attribute>
       <attribute name="verticalHeaderVisible">
        <bool>false</bool>
       </attribute>
       <attribute name="verticalHeaderMinimumSectionSize">
        <number>25</number>
       </attribute>
       <attribute name="verticalHeaderDefaultSectionSize">
        <number>25</number>
       </attribute>
       <row/>
       <column/>
       <column/>
       <column/>
       <column/>
       <column/>
      </widget>
     </widget>
    </widget>
    <widget class="QWidget" name="ViewOverlayTabName">
     <attribute name="title">
      <string>View Overlay</string>
     </attribute>
     <widget class="QTextEdit" name="SavingRegistrationResultsText">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>510</y>
        <width>400</width>
        <height>24</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QTextEdit { 
	background-color: #323232;
	color: #e6e6e6; /* Text color */
	border: 1px solid #323232; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    text-align: left;
    font-weight: bold;
}</string>
      </property>
      <property name="verticalScrollBarPolicy">
       <enum>Qt::ScrollBarAlwaysOff</enum>
      </property>
      <property name="horizontalScrollBarPolicy">
       <enum>Qt::ScrollBarAlwaysOff</enum>
      </property>
      <property name="readOnly">
       <bool>true</bool>
      </property>
      <property name="html">
       <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'MS Shell Dlg 2'; font-size:4.125pt; font-weight:600; font-style:normal;&quot;&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:9pt;&quot;&gt;Saving Registration Results. Please Wait...&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
      </property>
     </widget>
     <widget class="QFrame" name="ImageViewControlsFrame_O">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>585</y>
        <width>235</width>
        <height>75</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QFrame { 
	background-color: #4b4b4b;
	border: 1px solid #e6e6e6; /* Border  */
}</string>
      </property>
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
      <widget class="QTextEdit" name="ImageViewFrameHeaderText_O">
       <property name="geometry">
        <rect>
         <x>0</x>
         <y>0</y>
         <width>235</width>
         <height>25</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>10</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QTextEdit { 
	background-color: #4b4b4b;
	color: #e6e6e6; /* Text color */
	border: 1px solid #e6e6e6; /* Border  */
    text-align: left;
    font-weight: bold;
}</string>
       </property>
       <property name="verticalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="horizontalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="readOnly">
        <bool>true</bool>
       </property>
       <property name="html">
        <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'MS Shell Dlg 2'; font-size:10pt; font-weight:600; font-style:normal;&quot;&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:9pt;&quot;&gt;Fiducial Point View&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
      </widget>
      <widget class="QPushButton" name="GrowFiducialButton2_O">
       <property name="geometry">
        <rect>
         <x>200</x>
         <y>38</y>
         <width>25</width>
         <height>25</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>+</string>
       </property>
      </widget>
      <widget class="QPushButton" name="ColorFiducialButton_O">
       <property name="geometry">
        <rect>
         <x>10</x>
         <y>35</y>
         <width>45</width>
         <height>30</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>Color</string>
       </property>
      </widget>
      <widget class="QPushButton" name="ShrinkFiducialButton2_O">
       <property name="geometry">
        <rect>
         <x>170</x>
         <y>38</y>
         <width>25</width>
         <height>25</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>-</string>
       </property>
      </widget>
      <widget class="QPushButton" name="ColorFiducialButton2_O">
       <property name="geometry">
        <rect>
         <x>120</x>
         <y>35</y>
         <width>45</width>
         <height>30</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>Color</string>
       </property>
      </widget>
      <widget class="QPushButton" name="GrowFiducialButton_O">
       <property name="geometry">
        <rect>
         <x>90</x>
         <y>38</y>
         <width>25</width>
         <height>25</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>+</string>
       </property>
      </widget>
      <widget class="QPushButton" name="ShrinkFiducialButton_O">
       <property name="geometry">
        <rect>
         <x>60</x>
         <y>38</y>
         <width>25</width>
         <height>25</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>-</string>
       </property>
      </widget>
     </widget>
     <widget class="QLabel" name="UnregisteredImageFrameHeaderText">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>20</y>
        <width>400</width>
        <height>24</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <pointsize>11</pointsize>
        <weight>75</weight>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel { 
	background-color: transparent;
	color: #e6e6e6; /* Text color */
	border: 0px solid #e6e6e6; /* Border  */
    qproperty-alignment: 'AlignCenter';
}</string>
      </property>
      <property name="text">
       <string>Pre-Registration Overlay</string>
      </property>
     </widget>
     <widget class="QLabel" name="RegisteredImageFrameHeaderText">
      <property name="geometry">
       <rect>
        <x>422</x>
        <y>20</y>
        <width>400</width>
        <height>24</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <pointsize>11</pointsize>
        <weight>75</weight>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel { 
	background-color: transparent;
	color: #e6e6e6; /* Text color */
	border: 0px solid #e6e6e6; /* Border  */
    qproperty-alignment: 'AlignCenter';
}</string>
      </property>
      <property name="text">
       <string>Post-Registration-Overlay</string>
      </property>
     </widget>
     <widget class="QFrame" name="UnregisteredImageDisplayFrame">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>50</y>
        <width>400</width>
        <height>451</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QFrame { 
	background-color: #4b4b4b;
	border: 0px solid #e6e6e6; /* Border  */
}</string>
      </property>
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
     </widget>
     <widget class="QLabel" name="RegisteredImageBorder">
      <property name="geometry">
       <rect>
        <x>422</x>
        <y>47</y>
        <width>406</width>
        <height>457</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel {
        background-color: transparent; /* Transparent fill */
        border: 5px solid #e6e6e6;       /* Green border */
    }
</string>
      </property>
      <property name="text">
       <string/>
      </property>
     </widget>
     <widget class="QFrame" name="RegisteredImageDisplayFrame">
      <property name="geometry">
       <rect>
        <x>425</x>
        <y>50</y>
        <width>400</width>
        <height>451</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QFrame { 
	background-color: #4b4b4b;
	border: 0px solid #e6e6e6; /* Border  */
}</string>
      </property>
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
     </widget>
     <widget class="QLabel" name="UnregisteredImageBorder">
      <property name="geometry">
       <rect>
        <x>7</x>
        <y>47</y>
        <width>406</width>
        <height>457</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel {
        background-color: transparent; /* Transparent fill */
        border: 5px solid #e6e6e6;       /* Green border */
    }
</string>
      </property>
      <property name="text">
       <string/>
      </property>
     </widget>
     <widget class="QPushButton" name="TryElasticRegButton">
      <property name="geometry">
       <rect>
        <x>250</x>
        <y>620</y>
        <width>160</width>
        <height>30</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <pointsize>9</pointsize>
        <weight>75</weight>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
    background-color: #447544;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #488a48; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #49a349; /* More blue when pressed */
}</string>
      </property>
      <property name="text">
       <string>Try Elastic Registration</string>
      </property>
     </widget>
     <widget class="QPushButton" name="SaveRegistrationResultsButton_O">
      <property name="geometry">
       <rect>
        <x>250</x>
        <y>585</y>
        <width>55</width>
        <height>30</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <pointsize>9</pointsize>
        <weight>75</weight>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
    background-color: #447544;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #488a48; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #49a349; /* More blue when pressed */
}</string>
      </property>
      <property name="text">
       <string>Save</string>
      </property>
     </widget>
     <widget class="QPushButton" name="ReturnToFiducialsTab_O">
      <property name="geometry">
       <rect>
        <x>310</x>
        <y>585</y>
        <width>100</width>
        <height>30</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <pointsize>9</pointsize>
        <weight>75</weight>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
      </property>
      <property name="text">
       <string>Review Points</string>
      </property>
     </widget>
     <widget class="QFrame" name="DisableFrame_O1">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>30</y>
        <width>10</width>
        <height>10</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QFrame { 
	background-color: rgba(115, 115, 115, 0.4);
	border: 1px solid #e6e6e6; /* Border  */
}</string>
      </property>
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
      <widget class="QFrame" name="DisableFrame_E1_11">
       <property name="geometry">
        <rect>
         <x>-190</x>
         <y>30</y>
         <width>31</width>
         <height>31</height>
        </rect>
       </property>
       <property name="styleSheet">
        <string notr="true">QFrame { 
	background-color: rgba(255, 255, 255, 0.4);
	border: 1px solid #e6e6e6; /* Border  */
}</string>
       </property>
       <property name="frameShape">
        <enum>QFrame::StyledPanel</enum>
       </property>
       <property name="frameShadow">
        <enum>QFrame::Raised</enum>
       </property>
      </widget>
     </widget>
     <zorder>UnregisteredImageBorder</zorder>
     <zorder>ImageViewControlsFrame_O</zorder>
     <zorder>UnregisteredImageFrameHeaderText</zorder>
     <zorder>RegisteredImageFrameHeaderText</zorder>
     <zorder>UnregisteredImageDisplayFrame</zorder>
     <zorder>RegisteredImageBorder</zorder>
     <zorder>RegisteredImageDisplayFrame</zorder>
     <zorder>SavingRegistrationResultsText</zorder>
     <zorder>TryElasticRegButton</zorder>
     <zorder>SaveRegistrationResultsButton_O</zorder>
     <zorder>ReturnToFiducialsTab_O</zorder>
     <zorder>DisableFrame_O1</zorder>
    </widget>
    <widget class="QWidget" name="AlignElasticTabName">
     <attribute name="title">
      <string>Align Elastic</string>
     </attribute>
     <widget class="QFrame" name="FiducialRegisteredImageDisplayFrame">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>50</y>
        <width>400</width>
        <height>451</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QFrame { 
	background-color: #4b4b4b;
	border: 0px solid #e6e6e6; /* Border  */
}</string>
      </property>
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
     </widget>
     <widget class="QLabel" name="FiducialRegisteredImageFrameHeaderText">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>20</y>
        <width>400</width>
        <height>24</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <pointsize>11</pointsize>
        <weight>75</weight>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel { 
	background-color: transparent;
	color: #e6e6e6; /* Text color */
	border: 0px solid #e6e6e6; /* Border  */
    qproperty-alignment: 'AlignCenter';
}</string>
      </property>
      <property name="text">
       <string>Fiducial Registration Overlay</string>
      </property>
     </widget>
     <widget class="QLabel" name="ElasticRegisteredImageBorder">
      <property name="geometry">
       <rect>
        <x>422</x>
        <y>47</y>
        <width>406</width>
        <height>457</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel {
        background-color: transparent; /* Transparent fill */
        border: 5px solid #e6e6e6;       /* Green border */
    }
</string>
      </property>
      <property name="text">
       <string/>
      </property>
     </widget>
     <widget class="QLabel" name="FiducialRegisteredImageBorder">
      <property name="geometry">
       <rect>
        <x>7</x>
        <y>47</y>
        <width>406</width>
        <height>457</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel {
        background-color: transparent; /* Transparent fill */
        border: 5px solid #e6e6e6;       /* Green border */
    }
</string>
      </property>
      <property name="text">
       <string/>
      </property>
     </widget>
     <widget class="QFrame" name="ElasticRegisteredImageDisplayFrame">
      <property name="geometry">
       <rect>
        <x>425</x>
        <y>50</y>
        <width>400</width>
        <height>451</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QFrame { 
	background-color: #4b4b4b;
	border: 0px solid #e6e6e6; /* Border  */
}</string>
      </property>
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
     </widget>
     <widget class="QLabel" name="ElasticRegisteredImageFrameHeaderText">
      <property name="geometry">
       <rect>
        <x>422</x>
        <y>20</y>
        <width>400</width>
        <height>24</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <pointsize>11</pointsize>
        <weight>75</weight>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel { 
	background-color: transparent;
	color: #e6e6e6; /* Text color */
	border: 0px solid #e6e6e6; /* Border  */
    qproperty-alignment: 'AlignCenter';
}</string>
      </property>
      <property name="text">
       <string>Fiducial + Elastic Registration Overlay</string>
      </property>
     </widget>
     <widget class="QPushButton" name="QuitElasticRegistrationButton">
      <property name="geometry">
       <rect>
        <x>285</x>
        <y>620</y>
        <width>125</width>
        <height>30</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <pointsize>9</pointsize>
        <weight>75</weight>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
      </property>
      <property name="text">
       <string>Quit Elastic</string>
      </property>
     </widget>
     <widget class="QFrame" name="ElasticRegistrationControlsFrame">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>585</y>
        <width>270</width>
        <height>75</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QFrame { 
	background-color: #4b4b4b;
	border: 1px solid #e6e6e6; /* Border  */
}</string>
      </property>
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
      <widget class="QTextEdit" name="ElasticRegistrationHeaderText">
       <property name="geometry">
        <rect>
         <x>0</x>
         <y>0</y>
         <width>270</width>
         <height>25</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>10</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QTextEdit { 
	background-color: #4b4b4b;
	color: #e6e6e6; /* Text color */
	border: 1px solid #e6e6e6; /* Border  */
    text-align: left;
    font-weight: bold;
}</string>
       </property>
       <property name="verticalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="horizontalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="readOnly">
        <bool>true</bool>
       </property>
       <property name="html">
        <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'MS Shell Dlg 2'; font-size:10pt; font-weight:600; font-style:normal;&quot;&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:9pt;&quot;&gt;Elastic Registration Tile Settings&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
      </widget>
      <widget class="QPushButton" name="GrowTileSpacingButton">
       <property name="geometry">
        <rect>
         <x>184</x>
         <y>38</y>
         <width>25</width>
         <height>25</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>+</string>
       </property>
      </widget>
      <widget class="QPushButton" name="ShrinkTileSpacingButton">
       <property name="geometry">
        <rect>
         <x>154</x>
         <y>38</y>
         <width>25</width>
         <height>25</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>-</string>
       </property>
      </widget>
      <widget class="QPushButton" name="GrowTileSizeButton">
       <property name="geometry">
        <rect>
         <x>70</x>
         <y>38</y>
         <width>25</width>
         <height>25</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>+</string>
       </property>
      </widget>
      <widget class="QPushButton" name="ShrinkTileSizeButton">
       <property name="geometry">
        <rect>
         <x>40</x>
         <y>38</y>
         <width>25</width>
         <height>25</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>-</string>
       </property>
      </widget>
      <widget class="QTextEdit" name="TileSizeText">
       <property name="geometry">
        <rect>
         <x>1</x>
         <y>29</y>
         <width>38</width>
         <height>40</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QTextEdit { 
    background-color: #4b4b4b;
    color: #e6e6e6; /* Text color */
    border: 1px solid #4b4b4b; /* Border */
    border-radius: 5px; /* Optional: Rounded corners */
    text-align: right;
    font-weight: bold;
}
</string>
       </property>
       <property name="verticalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="horizontalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="readOnly">
        <bool>true</bool>
       </property>
       <property name="html">
        <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'MS Shell Dlg 2'; font-size:9pt; font-weight:600; font-style:normal;&quot;&gt;
&lt;p align=&quot;right&quot; style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:8.25pt;&quot;&gt;Size:&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;right&quot; style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:8.25pt;&quot;&gt;250&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
      </widget>
      <widget class="QTextEdit" name="TileSpacingText">
       <property name="geometry">
        <rect>
         <x>92</x>
         <y>29</y>
         <width>60</width>
         <height>40</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QTextEdit { 
    background-color: #4b4b4b;
    color: #e6e6e6; /* Text color */
    border: 1px solid #4b4b4b; /* Border */
    border-radius: 5px; /* Optional: Rounded corners */
    text-align: right;
    font-weight: bold;
}
</string>
       </property>
       <property name="verticalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="horizontalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="readOnly">
        <bool>true</bool>
       </property>
       <property name="html">
        <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'MS Shell Dlg 2'; font-size:9pt; font-weight:600; font-style:normal;&quot;&gt;
&lt;p align=&quot;right&quot; style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:8.25pt;&quot;&gt;Spacing:&lt;/span&gt;&lt;/p&gt;
&lt;p align=&quot;right&quot; style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:8.25pt;&quot;&gt;100&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
      </widget>
      <widget class="QPushButton" name="ColorSquaresButton">
       <property name="geometry">
        <rect>
         <x>215</x>
         <y>35</y>
         <width>45</width>
         <height>30</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>Color</string>
       </property>
      </widget>
      <zorder>TileSizeText</zorder>
      <zorder>TileSpacingText</zorder>
      <zorder>ElasticRegistrationHeaderText</zorder>
      <zorder>GrowTileSpacingButton</zorder>
      <zorder>ShrinkTileSpacingButton</zorder>
      <zorder>GrowTileSizeButton</zorder>
      <zorder>ShrinkTileSizeButton</zorder>
      <zorder>ColorSquaresButton</zorder>
     </widget>
     <widget class="QFrame" name="ImageViewControlsFrame_E">
      <property name="geometry">
       <rect>
        <x>430</x>
        <y>585</y>
        <width>235</width>
        <height>75</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QFrame { 
	background-color: #4b4b4b;
	border: 1px solid #e6e6e6; /* Border  */
}</string>
      </property>
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
      <widget class="QTextEdit" name="ImageViewFrameHeaderText_E">
       <property name="geometry">
        <rect>
         <x>0</x>
         <y>0</y>
         <width>235</width>
         <height>25</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>10</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QTextEdit { 
	background-color: #4b4b4b;
	color: #e6e6e6; /* Text color */
	border: 1px solid #e6e6e6; /* Border  */
    text-align: left;
    font-weight: bold;
}</string>
       </property>
       <property name="verticalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="horizontalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="readOnly">
        <bool>true</bool>
       </property>
       <property name="html">
        <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'MS Shell Dlg 2'; font-size:10pt; font-weight:600; font-style:normal;&quot;&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:9pt;&quot;&gt;Fiducial Point View&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
      </widget>
      <widget class="QPushButton" name="GrowFiducialButton2_E">
       <property name="geometry">
        <rect>
         <x>200</x>
         <y>38</y>
         <width>25</width>
         <height>25</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>+</string>
       </property>
      </widget>
      <widget class="QPushButton" name="ColorFiducialButton_E">
       <property name="geometry">
        <rect>
         <x>10</x>
         <y>35</y>
         <width>45</width>
         <height>30</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>Color</string>
       </property>
      </widget>
      <widget class="QPushButton" name="ShrinkFiducialButton2_E">
       <property name="geometry">
        <rect>
         <x>170</x>
         <y>38</y>
         <width>25</width>
         <height>25</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>-</string>
       </property>
      </widget>
      <widget class="QPushButton" name="ColorFiducialButton2_E">
       <property name="geometry">
        <rect>
         <x>120</x>
         <y>35</y>
         <width>45</width>
         <height>30</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>Color</string>
       </property>
      </widget>
      <widget class="QPushButton" name="GrowFiducialButton_E">
       <property name="geometry">
        <rect>
         <x>90</x>
         <y>38</y>
         <width>25</width>
         <height>25</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>+</string>
       </property>
      </widget>
      <widget class="QPushButton" name="ShrinkFiducialButton_E">
       <property name="geometry">
        <rect>
         <x>60</x>
         <y>38</y>
         <width>25</width>
         <height>25</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>-</string>
       </property>
      </widget>
     </widget>
     <widget class="QFrame" name="ClockFrame_E">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>30</y>
        <width>10</width>
        <height>10</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QFrame { 
	background-color: rgba(255, 255, 255, 0.4);
	border: 1px solid #e6e6e6; /* Border  */
}</string>
      </property>
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
      <widget class="QFrame" name="DisableFrame_E1_8">
       <property name="geometry">
        <rect>
         <x>-190</x>
         <y>30</y>
         <width>31</width>
         <height>31</height>
        </rect>
       </property>
       <property name="styleSheet">
        <string notr="true">QFrame { 
	background-color: rgba(255, 255, 255, 0.4);
	border: 1px solid #e6e6e6; /* Border  */
}</string>
       </property>
       <property name="frameShape">
        <enum>QFrame::StyledPanel</enum>
       </property>
       <property name="frameShadow">
        <enum>QFrame::Raised</enum>
       </property>
      </widget>
     </widget>
     <widget class="QTextEdit" name="CalculatingElasticRegistrationText">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>510</y>
        <width>400</width>
        <height>24</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QTextEdit { 
	background-color: #323232;
	color: #e6e6e6; /* Text color */
	border: 1px solid #323232; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    text-align: left;
    font-weight: bold;
}</string>
      </property>
      <property name="verticalScrollBarPolicy">
       <enum>Qt::ScrollBarAlwaysOff</enum>
      </property>
      <property name="horizontalScrollBarPolicy">
       <enum>Qt::ScrollBarAlwaysOff</enum>
      </property>
      <property name="readOnly">
       <bool>true</bool>
      </property>
      <property name="html">
       <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'MS Shell Dlg 2'; font-size:4.125pt; font-weight:600; font-style:normal;&quot;&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:9pt;&quot;&gt;Calculating Elastic Registration. Please Wait...&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
      </property>
     </widget>
     <widget class="QCheckBox" name="ViewElasticCheckBox">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>550</y>
        <width>91</width>
        <height>30</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <pointsize>10</pointsize>
        <weight>75</weight>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QCheckBox {
    background-color: #323232;
    color: #e6e6e6; /* Text color */
    padding: 2px; /* Optional: space around the text */
	width: 100px; /* Optional: Adjust width to allow for wrapping */
    word-wrap: break-word; /* Enable word wrap */
}
</string>
      </property>
      <property name="text">
       <string>Visible</string>
      </property>
     </widget>
     <widget class="QPushButton" name="CalculateElasticRegistrationButton">
      <property name="geometry">
       <rect>
        <x>285</x>
        <y>585</y>
        <width>125</width>
        <height>30</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <pointsize>9</pointsize>
        <weight>75</weight>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
    background-color: #447544;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #488a48; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #49a349; /* More blue when pressed */
}</string>
      </property>
      <property name="text">
       <string>Calculate Elastic</string>
      </property>
     </widget>
     <widget class="QPushButton" name="SaveRegistrationResultsButton_E">
      <property name="geometry">
       <rect>
        <x>670</x>
        <y>585</y>
        <width>55</width>
        <height>30</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <pointsize>9</pointsize>
        <weight>75</weight>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
    background-color: #447544;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #488a48; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #49a349; /* More blue when pressed */
}</string>
      </property>
      <property name="text">
       <string>Save</string>
      </property>
     </widget>
     <widget class="QPushButton" name="ReturnToFiducialsTabButton_E">
      <property name="geometry">
       <rect>
        <x>730</x>
        <y>585</y>
        <width>100</width>
        <height>30</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <pointsize>9</pointsize>
        <weight>75</weight>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
      </property>
      <property name="text">
       <string>Review Tiles</string>
      </property>
     </widget>
     <widget class="QFrame" name="DisableFrame_E1">
      <property name="geometry">
       <rect>
        <x>30</x>
        <y>30</y>
        <width>10</width>
        <height>10</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QFrame { 
	background-color: rgba(115, 115, 115, 0.4);
	border: 1px solid #e6e6e6; /* Border  */
}</string>
      </property>
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
      <widget class="QFrame" name="DisableFrame_E1_10">
       <property name="geometry">
        <rect>
         <x>-190</x>
         <y>30</y>
         <width>31</width>
         <height>31</height>
        </rect>
       </property>
       <property name="styleSheet">
        <string notr="true">QFrame { 
	background-color: rgba(255, 255, 255, 0.4);
	border: 1px solid #e6e6e6; /* Border  */
}</string>
       </property>
       <property name="frameShape">
        <enum>QFrame::StyledPanel</enum>
       </property>
       <property name="frameShadow">
        <enum>QFrame::Raised</enum>
       </property>
      </widget>
     </widget>
     <widget class="QPushButton" name="QuitElasticRegistrationButton2">
      <property name="geometry">
       <rect>
        <x>670</x>
        <y>620</y>
        <width>160</width>
        <height>30</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <pointsize>9</pointsize>
        <weight>75</weight>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
      </property>
      <property name="text">
       <string>Quit Elastic</string>
      </property>
     </widget>
     <widget class="QFrame" name="DisableFrame_E2">
      <property name="geometry">
       <rect>
        <x>50</x>
        <y>30</y>
        <width>10</width>
        <height>10</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QFrame { 
	background-color: rgba(115, 115, 115, 0.4);
	border: 1px solid #e6e6e6; /* Border  */
}</string>
      </property>
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
      <widget class="QFrame" name="DisableFrame_E1_13">
       <property name="geometry">
        <rect>
         <x>-190</x>
         <y>30</y>
         <width>31</width>
         <height>31</height>
        </rect>
       </property>
       <property name="styleSheet">
        <string notr="true">QFrame { 
	background-color: rgba(255, 255, 255, 0.4);
	border: 1px solid #e6e6e6; /* Border  */
}</string>
       </property>
       <property name="frameShape">
        <enum>QFrame::StyledPanel</enum>
       </property>
       <property name="frameShadow">
        <enum>QFrame::Raised</enum>
       </property>
      </widget>
     </widget>
     <zorder>QuitElasticRegistrationButton2</zorder>
     <zorder>FiducialRegisteredImageFrameHeaderText</zorder>
     <zorder>ImageViewControlsFrame_E</zorder>
     <zorder>FiducialRegisteredImageBorder</zorder>
     <zorder>FiducialRegisteredImageDisplayFrame</zorder>
     <zorder>ElasticRegisteredImageBorder</zorder>
     <zorder>ElasticRegisteredImageDisplayFrame</zorder>
     <zorder>ElasticRegisteredImageFrameHeaderText</zorder>
     <zorder>QuitElasticRegistrationButton</zorder>
     <zorder>ElasticRegistrationControlsFrame</zorder>
     <zorder>ViewElasticCheckBox</zorder>
     <zorder>CalculateElasticRegistrationButton</zorder>
     <zorder>SaveRegistrationResultsButton_E</zorder>
     <zorder>ReturnToFiducialsTabButton_E</zorder>
     <zorder>DisableFrame_E1</zorder>
     <zorder>DisableFrame_E2</zorder>
     <zorder>CalculatingElasticRegistrationText</zorder>
     <zorder>ClockFrame_E</zorder>
    </widget>
    <widget class="QWidget" name="KeyboardTabName">
     <attribute name="title">
      <string>Keyboard</string>
     </attribute>
     <widget class="QFrame" name="KeyboardShortcutsControlsFrame">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>10</y>
        <width>405</width>
        <height>531</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QFrame { 
	background-color: #4b4b4b;
	border: 1px solid #e6e6e6; /* Border  */
}</string>
      </property>
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
      <widget class="QTextEdit" name="TileSizeText_5">
       <property name="geometry">
        <rect>
         <x>10</x>
         <y>110</y>
         <width>381</width>
         <height>111</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>8</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QTextEdit { 
	background-color: #4b4b4b;
	color: #e6e6e6; /* Text color */
	border: 1px solid #4b4b4b; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
	text-align: left;
}</string>
       </property>
       <property name="verticalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="horizontalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="readOnly">
        <bool>true</bool>
       </property>
       <property name="html">
        <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'MS Shell Dlg 2'; font-size:8pt; font-weight:400; font-style:normal;&quot;&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:9pt; font-weight:600;&quot;&gt;Press &amp;quot;letter&amp;quot; to apply to the left image&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:9pt; font-weight:600;&quot;&gt;Press &amp;quot;Shift+letter&amp;quot; to apply to the right image&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:9pt; font-weight:600;&quot;&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:9pt; font-weight:600;&quot;&gt;Examples&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:9pt; font-weight:600;&quot;&gt;&amp;quot;R&amp;quot; rotate left image + 90 degress&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:9pt; font-weight:600;&quot;&gt;&amp;quot;Shift D&amp;quot; return right image to default view&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:9pt; font-weight:600;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
      </widget>
      <widget class="QTableWidget" name="keyboardShortCutsTableWidget">
       <property name="geometry">
        <rect>
         <x>10</x>
         <y>40</y>
         <width>386</width>
         <height>71</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QTableView {
    background-color: #5a5a5a;
    color: #e6e6e6; 
    font-weight: bold;
    font-size: 9pt; /* Table body font size */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 0px; /* Optional: Rounded corners */
}

QHeaderView::section {
    border: 0px solid #e6e6e6; /* Border  */
    gridline-color: #e6e6e6; /* Gridline color */
    background-color: #646464;
    color: #e6e6e6; 
    font-weight: bold;
    font-size: 12pt; /* Header font size */
    padding: 1px;
}

QHeaderView {
    border: 0px solid #e6e6e6; /* Border  */
    background-color: #646464; /* Background for the entire header area */
    font-size: 12pt; /* Ensure header area uses 12pt */
}

QTableCornerButton::section {
    background-color: #646464; /* Match the header background */
}

/* Center text in the table body items */
QTableView::item,
QTableWidget::item {
    border: 0px solid #e6e6e6; /* Border  */
    gridline-color: #e6e6e6; /* Gridline color */
    text-align: center;
    font-size: 9pt; /* Table body items font size */
}

QTableView::viewport {
    background-color: #646464; /* Background beneath the last row */
}

QTableWidget::item:selected {
    background-color: #666f75; /* Background for selected cells */
    color: #e6e6e6; /* Text color for selected cells */
}

QTableWidget::item:selected:!active {
    background-color: #5a5a5a; /* Background when table loses focus */
    color: #e6e6e6; /* Text color */
}

QTableWidget QLineEdit {
    background-color: #666f75; /* Background when editing */
    color: #e6e6e6; /* Text color while editing */
    border: 1px solid #e6e6e6; /* Border for the editor */
}
</string>
       </property>
       <property name="horizontalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="autoScroll">
        <bool>false</bool>
       </property>
       <property name="editTriggers">
        <set>QAbstractItemView::NoEditTriggers</set>
       </property>
       <property name="rowCount">
        <number>1</number>
       </property>
       <property name="columnCount">
        <number>3</number>
       </property>
       <attribute name="horizontalHeaderMinimumSectionSize">
        <number>25</number>
       </attribute>
       <attribute name="horizontalHeaderDefaultSectionSize">
        <number>125</number>
       </attribute>
       <attribute name="horizontalHeaderStretchLastSection">
        <bool>true</bool>
       </attribute>
       <attribute name="verticalHeaderVisible">
        <bool>false</bool>
       </attribute>
       <attribute name="verticalHeaderMinimumSectionSize">
        <number>25</number>
       </attribute>
       <attribute name="verticalHeaderDefaultSectionSize">
        <number>25</number>
       </attribute>
       <row/>
       <column/>
       <column/>
       <column/>
      </widget>
      <widget class="QTextEdit" name="TileSizeText_6">
       <property name="geometry">
        <rect>
         <x>10</x>
         <y>10</y>
         <width>381</width>
         <height>31</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>8</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QTextEdit { 
	background-color: #4b4b4b;
	color: #e6e6e6; /* Text color */
	border: 1px solid #4b4b4b; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
	text-align: center;
}</string>
       </property>
       <property name="verticalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="horizontalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="readOnly">
        <bool>true</bool>
       </property>
       <property name="html">
        <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'MS Shell Dlg 2'; font-size:8pt; font-weight:400; font-style:normal;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:11pt; font-weight:600;&quot;&gt;Axis View Settings&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
      </widget>
      <widget class="QTextEdit" name="TileSizeText_7">
       <property name="geometry">
        <rect>
         <x>10</x>
         <y>240</y>
         <width>381</width>
         <height>31</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>8</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QTextEdit { 
	background-color: #4b4b4b;
	color: #e6e6e6; /* Text color */
	border: 1px solid #4b4b4b; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
	text-align: center;
}</string>
       </property>
       <property name="verticalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="horizontalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="readOnly">
        <bool>true</bool>
       </property>
       <property name="html">
        <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'MS Shell Dlg 2'; font-size:8pt; font-weight:400; font-style:normal;&quot;&gt;
&lt;p align=&quot;center&quot; style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:11pt; font-weight:600;&quot;&gt;Intensity Settings&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
      </widget>
      <widget class="QTextEdit" name="TileSizeText_8">
       <property name="geometry">
        <rect>
         <x>10</x>
         <y>340</y>
         <width>381</width>
         <height>181</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>8</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QTextEdit { 
	background-color: #4b4b4b;
	color: #e6e6e6; /* Text color */
	border: 1px solid #4b4b4b; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
	text-align: left;
}</string>
       </property>
       <property name="verticalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="horizontalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="readOnly">
        <bool>true</bool>
       </property>
       <property name="html">
        <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'MS Shell Dlg 2'; font-size:8pt; font-weight:400; font-style:normal;&quot;&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:9pt; font-weight:600;&quot;&gt;Press &amp;quot;letter&amp;quot; to apply to the left image&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:9pt; font-weight:600;&quot;&gt;Press &amp;quot;Shift+letter&amp;quot; to apply to the right image&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:9pt; font-weight:600;&quot;&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:9pt; font-weight:600;&quot;&gt;Increase brightness / contrast: &amp;gt; (+) or L (++)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:9pt; font-weight:600;&quot;&gt;Decrease brightness / contrast: &amp;lt; (-) or K (--)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:9pt; font-weight:600;&quot;&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:9pt; font-weight:600;&quot;&gt;Examples&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:9pt; font-weight:600;&quot;&gt;&amp;quot;B &amp;gt;&amp;quot; increase brightness of left image&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:9pt; font-weight:600;&quot;&gt;&amp;quot;B L&amp;quot;  increase brightness of left image a lot&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:9pt; font-weight:600;&quot;&gt;&amp;quot;Shift C K&amp;quot; decrease contrast of left image a lot&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:9pt; font-weight:600;&quot;&gt;&amp;quot;Shift A&amp;quot; auto-adjust right image&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:9pt; font-weight:600;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
      </widget>
      <widget class="QTableWidget" name="keyboardShortCutsTableWidget_2">
       <property name="geometry">
        <rect>
         <x>10</x>
         <y>270</y>
         <width>386</width>
         <height>71</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QTableView {
    background-color: #5a5a5a;
    color: #e6e6e6; 
    font-weight: bold;
    font-size: 9pt; /* Table body font size */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 0px; /* Optional: Rounded corners */
}

QHeaderView::section {
    border: 0px solid #e6e6e6; /* Border  */
    gridline-color: #e6e6e6; /* Gridline color */
    background-color: #646464;
    color: #e6e6e6; 
    font-weight: bold;
    font-size: 12pt; /* Header font size */
    padding: 1px;
}

QHeaderView {
    border: 0px solid #e6e6e6; /* Border  */
    background-color: #646464; /* Background for the entire header area */
    font-size: 12pt; /* Ensure header area uses 12pt */
}

QTableCornerButton::section {
    background-color: #646464; /* Match the header background */
}

/* Center text in the table body items */
QTableView::item,
QTableWidget::item {
    border: 0px solid #e6e6e6; /* Border  */
    gridline-color: #e6e6e6; /* Gridline color */
    text-align: center;
    font-size: 9pt; /* Table body items font size */
}

QTableView::viewport {
    background-color: #646464; /* Background beneath the last row */
}

QTableWidget::item:selected {
    background-color: #666f75; /* Background for selected cells */
    color: #e6e6e6; /* Text color for selected cells */
}

QTableWidget::item:selected:!active {
    background-color: #5a5a5a; /* Background when table loses focus */
    color: #e6e6e6; /* Text color */
}

QTableWidget QLineEdit {
    background-color: #666f75; /* Background when editing */
    color: #e6e6e6; /* Text color while editing */
    border: 1px solid #e6e6e6; /* Border for the editor */
}
</string>
       </property>
       <property name="horizontalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="autoScroll">
        <bool>false</bool>
       </property>
       <property name="editTriggers">
        <set>QAbstractItemView::NoEditTriggers</set>
       </property>
       <property name="rowCount">
        <number>1</number>
       </property>
       <property name="columnCount">
        <number>3</number>
       </property>
       <attribute name="horizontalHeaderMinimumSectionSize">
        <number>25</number>
       </attribute>
       <attribute name="horizontalHeaderDefaultSectionSize">
        <number>125</number>
       </attribute>
       <attribute name="horizontalHeaderStretchLastSection">
        <bool>true</bool>
       </attribute>
       <attribute name="verticalHeaderVisible">
        <bool>false</bool>
       </attribute>
       <attribute name="verticalHeaderMinimumSectionSize">
        <number>25</number>
       </attribute>
       <attribute name="verticalHeaderDefaultSectionSize">
        <number>25</number>
       </attribute>
       <row/>
       <column/>
       <column/>
       <column/>
      </widget>
      <zorder>TileSizeText_6</zorder>
      <zorder>TileSizeText_5</zorder>
      <zorder>keyboardShortCutsTableWidget</zorder>
      <zorder>TileSizeText_7</zorder>
      <zorder>TileSizeText_8</zorder>
      <zorder>keyboardShortCutsTableWidget_2</zorder>
     </widget>
    </widget>
    <widget class="QWidget" name="ApplyToImageTabName">
     <attribute name="title">
      <string>Align Images</string>
     </attribute>
     <widget class="QFrame" name="ApplyToImageFrame">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>10</y>
        <width>815</width>
        <height>370</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QFrame { 
	background-color: #4b4b4b;
	border: 1px solid #e6e6e6; /* Border  */
}</string>
      </property>
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
      <widget class="QTextEdit" name="ApplyToImageTableHeaderText">
       <property name="geometry">
        <rect>
         <x>0</x>
         <y>0</y>
         <width>815</width>
         <height>25</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>10</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QTextEdit { 
	background-color: #4b4b4b;
	color: #e6e6e6; /* Text color */
	border: 1px solid #e6e6e6; /* Border  */
    text-align: left;
    font-weight: bold;
}</string>
       </property>
       <property name="verticalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="horizontalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="readOnly">
        <bool>true</bool>
       </property>
       <property name="html">
        <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'MS Shell Dlg 2'; font-size:10pt; font-weight:600; font-style:normal;&quot;&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;Define Image to Register&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
      </widget>
      <widget class="QPushButton" name="chooseImageFileButton">
       <property name="geometry">
        <rect>
         <x>10</x>
         <y>35</y>
         <width>41</width>
         <height>31</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #323232;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 0px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}
 </string>
       </property>
       <property name="text">
        <string/>
       </property>
       <property name="iconSize">
        <size>
         <width>35</width>
         <height>35</height>
        </size>
       </property>
      </widget>
      <widget class="QTextEdit" name="BrowseForImageText">
       <property name="geometry">
        <rect>
         <x>51</x>
         <y>38</y>
         <width>201</width>
         <height>24</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QTextEdit { 
	background-color: transparent;
	color: #e6e6e6; /* Text color */
	border: 0px solid #4b4b4b; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
}</string>
       </property>
       <property name="verticalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="horizontalScrollBarPolicy">
        <enum>Qt::ScrollBarAlwaysOff</enum>
       </property>
       <property name="readOnly">
        <bool>true</bool>
       </property>
       <property name="html">
        <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'MS Shell Dlg 2'; font-size:9pt; font-weight:600; font-style:normal;&quot;&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;Browse for Image File&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
      </widget>
      <widget class="QComboBox" name="ApplyToImageComboBox">
       <property name="geometry">
        <rect>
         <x>370</x>
         <y>36</y>
         <width>200</width>
         <height>25</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>10</pointsize>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QComboBox {
    background-color: #707070; /* Light gray background color */
    color: #e6e6e6; /* Dark gray font color */
    padding: 5px; /* Optional: adds padding inside the combobox */
    border: 1px solid #555555; /* Optional: border color */
    border-radius: 5px; /* Optional: rounded corners */
}

QComboBox QAbstractItemView { /* Styles for dropdown list */
    background-color: #707070; /* Dropdown background color */
    color: #e6e6e6; /* Dropdown font color */
    selection-background-color: #cce5ff; /* Background color when an item is selected */
    selection-color: #e6e6e6; /* Font color of selected item */
}

</string>
       </property>
      </widget>
      <widget class="QPushButton" name="RegisterImageButton">
       <property name="geometry">
        <rect>
         <x>695</x>
         <y>30</y>
         <width>110</width>
         <height>30</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>Register Image</string>
       </property>
      </widget>
      <widget class="QTableWidget" name="ApplyToImageTableWidget">
       <property name="geometry">
        <rect>
         <x>10</x>
         <y>65</y>
         <width>795</width>
         <height>295</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QTableView {
    background-color: #5a5a5a;
    color: #e6e6e6; 
    font-weight: bold;
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 0px; /* Optional: Rounded corners */
}

QHeaderView::section {
    border: 0px solid #e6e6e6; /* Border  */
    gridline-color: #e6e6e6; /* Set the color of the gridlines */
    background-color: #646464;
    color: #e6e6e6; 
    font-weight: bold;
    padding: 4px;
}

QHeaderView {
	border: 0px solid #e6e6e6; /* Border  */
    background-color: #646464; /* Background for the entire header area */
}

QTableCornerButton::section {
    background-color: #646464; /* Match the header background */
}

QTableWidget::item {
    border: 0px solid #e6e6e6; /* Border  */
    gridline-color: #e6e6e6; /* Set the color of the gridlines */
	text-align: center;
}

QTableView::viewport {
    background-color: #646464; /* Background beneath the last row */
}

QTableWidget::item:selected {
    background-color: #666f75; /* background for selected cells */
   color: #e6e6e6; /* Text color for selected cells */
}

QTableWidget::item:selected:!active {
    background-color: #5a5a5a; /* background when table loses focus */
    color: #e6e6e6; /* Text color */
}

QTableWidget QLineEdit {
    background-color: #666f75; /* Background when editing (light orange) */
    color: #e6e6e6; /* Text color while editing */
    border: 1px solid #e6e6e6; /* Border for the editor */
}</string>
       </property>
       <property name="editTriggers">
        <set>QAbstractItemView::NoEditTriggers</set>
       </property>
       <property name="rowCount">
        <number>1</number>
       </property>
       <property name="columnCount">
        <number>4</number>
       </property>
       <attribute name="horizontalHeaderCascadingSectionResizes">
        <bool>true</bool>
       </attribute>
       <attribute name="horizontalHeaderMinimumSectionSize">
        <number>175</number>
       </attribute>
       <attribute name="horizontalHeaderDefaultSectionSize">
        <number>175</number>
       </attribute>
       <attribute name="horizontalHeaderStretchLastSection">
        <bool>true</bool>
       </attribute>
       <attribute name="verticalHeaderVisible">
        <bool>false</bool>
       </attribute>
       <attribute name="verticalHeaderMinimumSectionSize">
        <number>25</number>
       </attribute>
       <attribute name="verticalHeaderDefaultSectionSize">
        <number>25</number>
       </attribute>
       <row/>
       <column/>
       <column/>
       <column/>
       <column/>
      </widget>
      <widget class="QPushButton" name="KeepApplyToImageButton">
       <property name="enabled">
        <bool>true</bool>
       </property>
       <property name="geometry">
        <rect>
         <x>585</x>
         <y>30</y>
         <width>50</width>
         <height>30</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>Keep</string>
       </property>
      </widget>
      <widget class="QPushButton" name="DeleteApplyToImageButton">
       <property name="geometry">
        <rect>
         <x>640</x>
         <y>30</y>
         <width>50</width>
         <height>30</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <pointsize>9</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="styleSheet">
        <string notr="true">QPushButton {
    background-color: #5a5a5a;
    color: #e6e6e6; /* Text color */
    border: 1px solid #e6e6e6; /* Border  */
    border-radius: 5px; /* Optional: Rounded corners */
    padding: 5px; /* Optional: Padding around text */
}

QPushButton:hover {
    background-color: #666f75; /* Grey-blue when hovered */
}

QPushButton:pressed {
    background-color: #7b8e9c; /* More blue when pressed */
}</string>
       </property>
       <property name="text">
        <string>Delete</string>
       </property>
      </widget>
     </widget>
     <widget class="QLabel" name="ApplyToImageText_1">
      <property name="geometry">
       <rect>
        <x>20</x>
        <y>400</y>
        <width>781</width>
        <height>24</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <pointsize>11</pointsize>
        <weight>75</weight>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel { 
	background-color: transparent;
	color: #e6e6e6; /* Text color */
	border: 0px solid #e6e6e6; /* Border  */
    qproperty-alignment: 'AlignLeft';
}&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;ui version=&quot;4.0&quot;&gt;
 &lt;widget name=&quot;__qt_fake_top_level&quot;&gt;
  &lt;widget class=&quot;QLabel&quot; name=&quot;RegisterCoordsFrameHeaderText&quot;&gt;
   &lt;property name=&quot;geometry&quot;&gt;
    &lt;rect&gt;
     &lt;x&gt;10&lt;/x&gt;
     &lt;y&gt;156&lt;/y&gt;
     &lt;width&gt;510&lt;/width&gt;
     &lt;height&gt;24&lt;/height&gt;
    &lt;/rect&gt;
   &lt;/property&gt;
   &lt;property name=&quot;font&quot;&gt;
    &lt;font&gt;
     &lt;pointsize&gt;11&lt;/pointsize&gt;
     &lt;weight&gt;75&lt;/weight&gt;
     &lt;bold&gt;true&lt;/bold&gt;
    &lt;/font&gt;
   &lt;/property&gt;
   &lt;property name=&quot;styleSheet&quot;&gt;
    &lt;string notr=&quot;true&quot;&gt;QLabel { 
	background-color: transparent;
	color: #e6e6e6; /* Text color */
	border: 0px solid #e6e6e6; /* Border  */
    qproperty-alignment: 'AlignCenter';
}&lt;/string&gt;
   &lt;/property&gt;
   &lt;property name=&quot;text&quot;&gt;
    &lt;string&gt;Unregistered Moving Image&lt;/string&gt;
   &lt;/property&gt;
  &lt;/widget&gt;
 &lt;/widget&gt;
 &lt;resources/&gt;
&lt;/ui&gt;
</string>
      </property>
      <property name="text">
       <string>Step 1 of 3: Loading Image, this can take a minute...</string>
      </property>
     </widget>
     <widget class="QLabel" name="ApplyToImageText_2">
      <property name="geometry">
       <rect>
        <x>20</x>
        <y>440</y>
        <width>791</width>
        <height>24</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <pointsize>11</pointsize>
        <weight>75</weight>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel { 
	background-color: transparent;
	color: #e6e6e6; /* Text color */
	border: 0px solid #e6e6e6; /* Border  */
    qproperty-alignment: 'AlignLeft';
}&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;ui version=&quot;4.0&quot;&gt;
 &lt;widget name=&quot;__qt_fake_top_level&quot;&gt;
  &lt;widget class=&quot;QLabel&quot; name=&quot;RegisterCoordsFrameHeaderText&quot;&gt;
   &lt;property name=&quot;geometry&quot;&gt;
    &lt;rect&gt;
     &lt;x&gt;10&lt;/x&gt;
     &lt;y&gt;156&lt;/y&gt;
     &lt;width&gt;510&lt;/width&gt;
     &lt;height&gt;24&lt;/height&gt;
    &lt;/rect&gt;
   &lt;/property&gt;
   &lt;property name=&quot;font&quot;&gt;
    &lt;font&gt;
     &lt;pointsize&gt;11&lt;/pointsize&gt;
     &lt;weight&gt;75&lt;/weight&gt;
     &lt;bold&gt;true&lt;/bold&gt;
    &lt;/font&gt;
   &lt;/property&gt;
   &lt;property name=&quot;styleSheet&quot;&gt;
    &lt;string notr=&quot;true&quot;&gt;QLabel { 
	background-color: transparent;
	color: #e6e6e6; /* Text color */
	border: 0px solid #e6e6e6; /* Border  */
    qproperty-alignment: 'AlignCenter';
}&lt;/string&gt;
   &lt;/property&gt;
   &lt;property name=&quot;text&quot;&gt;
    &lt;string&gt;Unregistered Moving Image&lt;/string&gt;
   &lt;/property&gt;
  &lt;/widget&gt;
 &lt;/widget&gt;
 &lt;resources/&gt;
&lt;/ui&gt;
</string>
      </property>
      <property name="text">
       <string>Step 2 of 3: Applying Registration...</string>
      </property>
     </widget>
     <widget class="QLabel" name="ApplyToImageText_3">
      <property name="geometry">
       <rect>
        <x>20</x>
        <y>480</y>
        <width>761</width>
        <height>24</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <pointsize>11</pointsize>
        <weight>75</weight>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel { 
	background-color: transparent;
	color: #e6e6e6; /* Text color */
	border: 0px solid #e6e6e6; /* Border  */
    qproperty-alignment: 'AlignLeft';
}&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;ui version=&quot;4.0&quot;&gt;
 &lt;widget name=&quot;__qt_fake_top_level&quot;&gt;
  &lt;widget class=&quot;QLabel&quot; name=&quot;RegisterCoordsFrameHeaderText&quot;&gt;
   &lt;property name=&quot;geometry&quot;&gt;
    &lt;rect&gt;
     &lt;x&gt;10&lt;/x&gt;
     &lt;y&gt;156&lt;/y&gt;
     &lt;width&gt;510&lt;/width&gt;
     &lt;height&gt;24&lt;/height&gt;
    &lt;/rect&gt;
   &lt;/property&gt;
   &lt;property name=&quot;font&quot;&gt;
    &lt;font&gt;
     &lt;pointsize&gt;11&lt;/pointsize&gt;
     &lt;weight&gt;75&lt;/weight&gt;
     &lt;bold&gt;true&lt;/bold&gt;
    &lt;/font&gt;
   &lt;/property&gt;
   &lt;property name=&quot;styleSheet&quot;&gt;
    &lt;string notr=&quot;true&quot;&gt;QLabel { 
	background-color: transparent;
	color: #e6e6e6; /* Text color */
	border: 0px solid #e6e6e6; /* Border  */
    qproperty-alignment: 'AlignCenter';
}&lt;/string&gt;
   &lt;/property&gt;
   &lt;property name=&quot;text&quot;&gt;
    &lt;string&gt;Unregistered Moving Image&lt;/string&gt;
   &lt;/property&gt;
  &lt;/widget&gt;
 &lt;/widget&gt;
 &lt;resources/&gt;
&lt;/ui&gt;
</string>
      </property>
      <property name="text">
       <string>Step 3 of 3: Saving Registered Image...</string>
      </property>
     </widget>
     <widget class="QLabel" name="ApplyToImageText_4">
      <property name="geometry">
       <rect>
        <x>20</x>
        <y>520</y>
        <width>801</width>
        <height>24</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <pointsize>11</pointsize>
        <weight>75</weight>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel { 
	background-color: transparent;
	color: #e6e6e6; /* Text color */
	border: 0px solid #e6e6e6; /* Border  */
    qproperty-alignment: 'AlignLeft';
}&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;ui version=&quot;4.0&quot;&gt;
 &lt;widget name=&quot;__qt_fake_top_level&quot;&gt;
  &lt;widget class=&quot;QLabel&quot; name=&quot;RegisterCoordsFrameHeaderText&quot;&gt;
   &lt;property name=&quot;geometry&quot;&gt;
    &lt;rect&gt;
     &lt;x&gt;10&lt;/x&gt;
     &lt;y&gt;156&lt;/y&gt;
     &lt;width&gt;510&lt;/width&gt;
     &lt;height&gt;24&lt;/height&gt;
    &lt;/rect&gt;
   &lt;/property&gt;
   &lt;property name=&quot;font&quot;&gt;
    &lt;font&gt;
     &lt;pointsize&gt;11&lt;/pointsize&gt;
     &lt;weight&gt;75&lt;/weight&gt;
     &lt;bold&gt;true&lt;/bold&gt;
    &lt;/font&gt;
   &lt;/property&gt;
   &lt;property name=&quot;styleSheet&quot;&gt;
    &lt;string notr=&quot;true&quot;&gt;QLabel { 
	background-color: transparent;
	color: #e6e6e6; /* Text color */
	border: 0px solid #e6e6e6; /* Border  */
    qproperty-alignment: 'AlignCenter';
}&lt;/string&gt;
   &lt;/property&gt;
   &lt;property name=&quot;text&quot;&gt;
    &lt;string&gt;Unregistered Moving Image&lt;/string&gt;
   &lt;/property&gt;
  &lt;/widget&gt;
 &lt;/widget&gt;
 &lt;resources/&gt;
&lt;/ui&gt;
</string>
      </property>
      <property name="text">
       <string>Done!</string>
      </property>
     </widget>
     <widget class="QFrame" name="DisableFrame_I1">
      <property name="geometry">
       <rect>
        <x>810</x>
        <y>400</y>
        <width>10</width>
        <height>10</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QFrame { 
	background-color: rgba(115, 115, 115, 0.4);
	border: 1px solid #e6e6e6; /* Border  */
}</string>
      </property>
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
      <widget class="QFrame" name="DisableFrame_E1_12">
       <property name="geometry">
        <rect>
         <x>-190</x>
         <y>30</y>
         <width>31</width>
         <height>31</height>
        </rect>
       </property>
       <property name="styleSheet">
        <string notr="true">QFrame { 
	background-color: rgba(255, 255, 255, 0.4);
	border: 1px solid #e6e6e6; /* Border  */
}</string>
       </property>
       <property name="frameShape">
        <enum>QFrame::StyledPanel</enum>
       </property>
       <property name="frameShadow">
        <enum>QFrame::Raised</enum>
       </property>
      </widget>
     </widget>
    </widget>
   </widget>
  </widget>
  <widget class="QStatusBar" name="statusbar"/>
 </widget>
 <resources/>
 <connections/>
</ui>
